<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>闲客&#39;Blog</title>
  
  <subtitle>业精于勤荒于嬉， 行成于思毁于随</subtitle>
  <link href="http://xianke5200.github.io/atom.xml" rel="self"/>
  
  <link href="http://xianke5200.github.io/"/>
  <updated>2020-11-23T15:41:18.623Z</updated>
  <id>http://xianke5200.github.io/</id>
  
  <author>
    <name>xianke5200</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>realtek8762C BLE uart调试</title>
    <link href="http://xianke5200.github.io/2020/11/03/realtek8762C-BLE-uart%E8%B0%83%E8%AF%95/"/>
    <id>http://xianke5200.github.io/2020/11/03/realtek8762C-BLE-uart%E8%B0%83%E8%AF%95/</id>
    <published>2020-11-03T03:36:30.000Z</published>
    <updated>2020-11-23T15:41:18.623Z</updated>
    
    <content type="html"><![CDATA[<p>  在realtek板子上没有自带ble uart服务的例程代码，需要自己定义，最近因项目需求，通过nordic UART APP利用蓝牙打印数据，所以自己定义ble uart服务来适配NORDIC UART服务。<a id="more"></a>目前nrf connect软件已能成功识别Nordic UART Server服务。并且可以正常通信，收发数据。</p><h1 id="完整代码如下"><a href="#完整代码如下" class="headerlink" title="完整代码如下"></a>完整代码如下</h1><p>BLE_UART.c文件</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*********************************************************************************************************</span></span><br><span class="line"><span class="comment">*               Copyright(c) 2017, Realtek Semiconductor Corporation. All rights reserved.</span></span><br><span class="line"><span class="comment">**********************************************************************************************************</span></span><br><span class="line"><span class="comment">* @file     simple_ble_service.c</span></span><br><span class="line"><span class="comment">* @brief    simple BLE profile source file.</span></span><br><span class="line"><span class="comment">* @details  Demonstration of how to implement a self-definition profile.</span></span><br><span class="line"><span class="comment">* @author</span></span><br><span class="line"><span class="comment">* @date</span></span><br><span class="line"><span class="comment">* @version</span></span><br><span class="line"><span class="comment">*********************************************************************************************************</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;trace.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;uart_ble_service.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;gap.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;peripheral_app.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdarg.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;gap_bond_le.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;ble_common.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;debug_info.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> BLE_UART_ENABLE</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> UART_BLE_SERVICE_CHAR_V1_READ_INDEX           0x02</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> UART_BLE_SERVICE_CHAR_V2_WRITE_INDEX          2<span class="comment">// 5 该参数为对应项的UUID元素在uart_ble_service_tbl中的索引号</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> UART_BLE_SERVICE_CHAR_V3_NOTIFY_INDEX         4<span class="comment">// 7</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> UART_BLE_SERVICE_CHAR_V4_INDICATE_INDEX       0x0a</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> UART_BLE_SERVICE_CHAR_NOTIFY_CCCD_INDEX       (UART_BLE_SERVICE_CHAR_V3_NOTIFY_INDEX + 1)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> UART_BLE_SERVICE_CHAR_INDICATE_CCCD_INDEX     (UART_BLE_SERVICE_CHAR_V4_INDICATE_INDEX + 1)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">uint8_t</span> GATT_UUID_UART_SERVICE[<span class="number">16</span>] = &#123;<span class="number">0x9E</span>, <span class="number">0xCA</span>, <span class="number">0xDC</span>, <span class="number">0x24</span>, <span class="number">0x0E</span>, <span class="number">0xE5</span>, <span class="number">0xA9</span>, <span class="number">0xE0</span>, <span class="number">0x93</span>, <span class="number">0xF3</span>, <span class="number">0xA3</span>, <span class="number">0xB5</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x40</span>, <span class="number">0x6E</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">uint8_t</span> GATT_UUID_TX_SERVICE[<span class="number">16</span>] = &#123;<span class="number">0x9E</span>, <span class="number">0xCA</span>, <span class="number">0xDC</span>, <span class="number">0x24</span>, <span class="number">0x0E</span>, <span class="number">0xE5</span>, <span class="number">0xA9</span>, <span class="number">0xE0</span>, <span class="number">0x93</span>, <span class="number">0xF3</span>, <span class="number">0xA3</span>, <span class="number">0xB5</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x40</span>, <span class="number">0x6E</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">uint8_t</span> GATT_UUID_RX_SERVICE[<span class="number">16</span>] = &#123;<span class="number">0x9E</span>, <span class="number">0xCA</span>, <span class="number">0xDC</span>, <span class="number">0x24</span>, <span class="number">0x0E</span>, <span class="number">0xE5</span>, <span class="number">0xA9</span>, <span class="number">0xE0</span>, <span class="number">0x93</span>, <span class="number">0xF3</span>, <span class="number">0xA3</span>, <span class="number">0xB5</span>, <span class="number">0x02</span>, <span class="number">0x00</span>, <span class="number">0x40</span>, <span class="number">0x6E</span>&#125;;</span><br><span class="line"></span><br><span class="line">T_SERVER_ID uart_service_id;</span><br><span class="line"><span class="comment">/**&lt;  Value of simple read characteristic. */</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">uint8_t</span> uart_char_read_value[UART_READ_V1_MAX_LEN];</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">uint16_t</span> uart_char_read_len = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">char</span> uart_user_descr[] = <span class="string">&quot;uart read characteristic&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**&lt;  Function pointer used to send event to application from simple profile. Initiated in simp_ble_service_add_service. */</span></span><br><span class="line"><span class="keyword">static</span> P_FUN_SERVER_GENERAL_CB pfn_uart_ble_service_cb = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**&lt; @brief  profile/service definition.  </span></span><br><span class="line"><span class="comment">基本服务想在列表最前端，自定义uart服务，UUID为特定的128位UUID，所以基本服务属性需配置为ATTRIB_FLAG_VOID | ATTRIB_FLAG_LE</span></span><br><span class="line"><span class="comment">其他每一项在数组中包含相邻的两项，包括功能定义和UUID的定义，UUID也可分为16位和128位，如果为16位UUID（例0x1234），那最终UUID为0x0000 1234 0000 0000 0000 0000 0000 0000与系统默认UUID相或的结果；若为指定的128位UUID，则需将服务列表数组UUID元素结构体的标签指定使用128位UUID（例ATTRIB_FLAG_UUID_128BIT|ATTRIB_FLAG_VALUE_APPL）</span></span><br><span class="line"><span class="comment">notifuy和indicate功能元素的定义则多了功能使能一项，其他与上面一致</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">const</span> T_ATTRIB_APPL uart_ble_service_tbl[] =</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/* &lt;&lt;Primary Service&gt;&gt;, .. */</span></span><br><span class="line">    &#123;</span><br><span class="line">        (ATTRIB_FLAG_VOID | ATTRIB_FLAG_LE),  <span class="comment">/* flags     */</span></span><br><span class="line">        &#123;                                           <span class="comment">/* type_value */</span></span><br><span class="line">            LO_WORD(GATT_UUID_PRIMARY_SERVICE),</span><br><span class="line">            HI_WORD(GATT_UUID_PRIMARY_SERVICE),</span><br><span class="line">        &#125;,</span><br><span class="line">        UUID_128BIT_SIZE,                            <span class="comment">/* bValueLen     */</span></span><br><span class="line">        (<span class="keyword">void</span> *)GATT_UUID_UART_SERVICE,                                       <span class="comment">/* p_value_context */</span></span><br><span class="line">        GATT_PERM_READ                              <span class="comment">/* permissions  */</span></span><br><span class="line">    &#125;,</span><br><span class="line">#<span class="keyword">if</span> <span class="number">0</span></span><br><span class="line">    <span class="comment">/* &lt;&lt;Characteristic&gt;&gt; demo for read */</span></span><br><span class="line">    &#123;</span><br><span class="line">        ATTRIB_FLAG_VALUE_INCL,                     <span class="comment">/* flags */</span></span><br><span class="line">        &#123;                                           <span class="comment">/* type_value */</span></span><br><span class="line">            LO_WORD(GATT_UUID_CHARACTERISTIC),</span><br><span class="line">            HI_WORD(GATT_UUID_CHARACTERISTIC),</span><br><span class="line">            GATT_CHAR_PROP_READ                     <span class="comment">/* characteristic properties */</span></span><br><span class="line">            <span class="comment">/* characteristic UUID not needed here, is UUID of next attrib. */</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="number">1</span>,                                          <span class="comment">/* bValueLen */</span></span><br><span class="line">        <span class="literal">NULL</span>,</span><br><span class="line">        GATT_PERM_READ                              <span class="comment">/* permissions */</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        ATTRIB_FLAG_VALUE_APPL,                     <span class="comment">/* flags */</span></span><br><span class="line">        &#123;                                           <span class="comment">/* type_value */</span></span><br><span class="line">            LO_WORD(GATT_UUID_CHAR_UART_V1_READ),</span><br><span class="line">            HI_WORD(GATT_UUID_CHAR_UART_V1_READ)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="number">0</span>,                                          <span class="comment">/* bValueLen */</span></span><br><span class="line">        <span class="literal">NULL</span>,</span><br><span class="line">#<span class="keyword">if</span> SIMP_SRV_AUTHEN_EN</span><br><span class="line">        GATT_PERM_READ_AUTHEN_REQ                   <span class="comment">/* permissions */</span></span><br><span class="line">#<span class="keyword">else</span></span><br><span class="line">        GATT_PERM_READ                              <span class="comment">/* permissions */</span></span><br><span class="line">#endif</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        ATTRIB_FLAG_VOID | ATTRIB_FLAG_ASCII_Z,     <span class="comment">/* flags */</span></span><br><span class="line">        &#123;                                           <span class="comment">/* type_value */</span></span><br><span class="line">            LO_WORD(GATT_UUID_CHAR_USER_DESCR),</span><br><span class="line">            HI_WORD(GATT_UUID_CHAR_USER_DESCR),</span><br><span class="line">        &#125;,</span><br><span class="line">        (<span class="keyword">sizeof</span>(uart_user_descr) - <span class="number">1</span>),                                           <span class="comment">/* bValueLen */</span></span><br><span class="line">        (<span class="keyword">void</span> *)uart_user_descr,</span><br><span class="line">        GATT_PERM_READ           <span class="comment">/* permissions */</span></span><br><span class="line">    &#125;,</span><br><span class="line">#endif</span><br><span class="line">    <span class="comment">/* &lt;&lt;Characteristic&gt;&gt; demo for write */</span></span><br><span class="line">    &#123;</span><br><span class="line">        ATTRIB_FLAG_VALUE_INCL,                     <span class="comment">/* flags */</span></span><br><span class="line">        &#123;                                           <span class="comment">/* type_value */</span></span><br><span class="line">            LO_WORD(GATT_UUID_CHARACTERISTIC),</span><br><span class="line">            HI_WORD(GATT_UUID_CHARACTERISTIC),</span><br><span class="line">            (GATT_CHAR_PROP_WRITE | GATT_CHAR_PROP_WRITE_NO_RSP) <span class="comment">/* characteristic properties */</span></span><br><span class="line">            <span class="comment">/* characteristic UUID not needed here, is UUID of next attrib. */</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="number">1</span>,                                          <span class="comment">/* bValueLen */</span></span><br><span class="line">        <span class="literal">NULL</span>,</span><br><span class="line">        GATT_PERM_READ                              <span class="comment">/* permissions */</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        ATTRIB_FLAG_UUID_128BIT|ATTRIB_FLAG_VALUE_APPL,                     <span class="comment">/* flags */</span></span><br><span class="line">        &#123;</span><br><span class="line">        <span class="number">0x9E</span>,</span><br><span class="line">        <span class="number">0xCA</span>,</span><br><span class="line">        <span class="number">0xDC</span>,</span><br><span class="line">        <span class="number">0x24</span>,</span><br><span class="line">        <span class="number">0x0E</span>,</span><br><span class="line">        <span class="number">0xE5</span>,</span><br><span class="line">        <span class="number">0xA9</span>,</span><br><span class="line">        <span class="number">0xE0</span>,</span><br><span class="line">        <span class="number">0x93</span>,</span><br><span class="line">        <span class="number">0xF3</span>,</span><br><span class="line">        <span class="number">0xA3</span>,</span><br><span class="line">        <span class="number">0xB5</span>,</span><br><span class="line">        <span class="number">0x02</span>,</span><br><span class="line">        <span class="number">0x00</span>,</span><br><span class="line">        <span class="number">0x40</span>,</span><br><span class="line">        <span class="number">0x6E</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="number">0</span>,                                          <span class="comment">/* bValueLen */</span></span><br><span class="line">        <span class="literal">NULL</span>,</span><br><span class="line">#<span class="keyword">if</span> SIMP_SRV_AUTHEN_EN</span><br><span class="line">        GATT_PERM_WRITE_AUTHEN_REQ                  <span class="comment">/* permissions */</span></span><br><span class="line">#<span class="keyword">else</span></span><br><span class="line">        GATT_PERM_WRITE                             <span class="comment">/* permissions */</span></span><br><span class="line">#endif</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">/* &lt;&lt;Characteristic&gt;&gt;, demo for notify */</span></span><br><span class="line">    &#123;</span><br><span class="line">        ATTRIB_FLAG_VALUE_INCL,                     <span class="comment">/* flags */</span></span><br><span class="line">        &#123;                                          <span class="comment">/* type_value */</span></span><br><span class="line">            LO_WORD(GATT_UUID_CHARACTERISTIC),</span><br><span class="line">            HI_WORD(GATT_UUID_CHARACTERISTIC),</span><br><span class="line">            (GATT_CHAR_PROP_NOTIFY)                 <span class="comment">/* characteristic properties */</span></span><br><span class="line">            <span class="comment">/* characteristic UUID not needed here, is UUID of next attrib. */</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="number">1</span>,                                          <span class="comment">/* bValueLen */</span></span><br><span class="line">        <span class="literal">NULL</span>,</span><br><span class="line">        GATT_PERM_READ                              <span class="comment">/* permissions */</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        ATTRIB_FLAG_UUID_128BIT|ATTRIB_FLAG_VALUE_APPL,                     <span class="comment">/* flags */</span></span><br><span class="line">        &#123;</span><br><span class="line">        <span class="number">0x9E</span>,</span><br><span class="line">        <span class="number">0xCA</span>,</span><br><span class="line">        <span class="number">0xDC</span>,</span><br><span class="line">        <span class="number">0x24</span>,</span><br><span class="line">        <span class="number">0x0E</span>,</span><br><span class="line">        <span class="number">0xE5</span>,</span><br><span class="line">        <span class="number">0xA9</span>,</span><br><span class="line">        <span class="number">0xE0</span>,</span><br><span class="line">        <span class="number">0x93</span>,</span><br><span class="line">        <span class="number">0xF3</span>,</span><br><span class="line">        <span class="number">0xA3</span>,</span><br><span class="line">        <span class="number">0xB5</span>,</span><br><span class="line">        <span class="number">0x03</span>,</span><br><span class="line">        <span class="number">0x00</span>,</span><br><span class="line">        <span class="number">0x40</span>,</span><br><span class="line">        <span class="number">0x6E</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="number">0</span>,                                          <span class="comment">/* bValueLen */</span></span><br><span class="line">        <span class="literal">NULL</span>,</span><br><span class="line">        GATT_PERM_NONE                              <span class="comment">/* permissions */</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">/* client characteristic configuration */</span></span><br><span class="line">    &#123;</span><br><span class="line">        ATTRIB_FLAG_VALUE_INCL | ATTRIB_FLAG_CCCD_APPL,                 <span class="comment">/* flags */</span></span><br><span class="line">        &#123;                                          <span class="comment">/* type_value */</span></span><br><span class="line">            LO_WORD(GATT_UUID_CHAR_CLIENT_CONFIG),</span><br><span class="line">            HI_WORD(GATT_UUID_CHAR_CLIENT_CONFIG),</span><br><span class="line">            <span class="comment">/* <span class="doctag">NOTE:</span> this value has an instantiation for each client, a write to */</span></span><br><span class="line">            <span class="comment">/* this attribute does not modify this default value:                */</span></span><br><span class="line">            LO_WORD(GATT_CLIENT_CHAR_CONFIG_DEFAULT), <span class="comment">/* client char. config. bit field */</span></span><br><span class="line">            HI_WORD(GATT_CLIENT_CHAR_CONFIG_DEFAULT)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="number">2</span>,                                          <span class="comment">/* bValueLen */</span></span><br><span class="line">        <span class="literal">NULL</span>,</span><br><span class="line">#<span class="keyword">if</span> SIMP_SRV_AUTHEN_EN</span><br><span class="line">        (GATT_PERM_READ_AUTHEN_REQ | GATT_PERM_WRITE_AUTHEN_REQ) <span class="comment">/* permissions */</span></span><br><span class="line">#<span class="keyword">else</span></span><br><span class="line">        (GATT_PERM_READ | GATT_PERM_WRITE)          <span class="comment">/* permissions */</span></span><br><span class="line">#endif</span><br><span class="line">    &#125;,</span><br><span class="line">#<span class="keyword">if</span> <span class="number">0</span></span><br><span class="line">    <span class="comment">/* &lt;&lt;Characteristic&gt;&gt; demo for indicate */</span></span><br><span class="line">    &#123;</span><br><span class="line">        ATTRIB_FLAG_VALUE_INCL,                     <span class="comment">/* flags */</span></span><br><span class="line">        &#123;                                           <span class="comment">/* type_value */</span></span><br><span class="line">            LO_WORD(GATT_UUID_CHARACTERISTIC),</span><br><span class="line">            HI_WORD(GATT_UUID_CHARACTERISTIC),</span><br><span class="line">            (GATT_CHAR_PROP_INDICATE)               <span class="comment">/* characteristic properties */</span></span><br><span class="line">            <span class="comment">/* characteristic UUID not needed here, is UUID of next attrib. */</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="number">1</span>,                                          <span class="comment">/* bValueLen */</span></span><br><span class="line">        <span class="literal">NULL</span>,</span><br><span class="line">        GATT_PERM_READ                              <span class="comment">/* permissions */</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        ATTRIB_FLAG_VALUE_APPL,                     <span class="comment">/* flags */</span></span><br><span class="line">        &#123;                                           <span class="comment">/* type_value */</span></span><br><span class="line">            LO_WORD(GATT_UUID_CHAR_UART_V4_INDICATE),</span><br><span class="line">            HI_WORD(GATT_UUID_CHAR_UART_V4_INDICATE)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="number">0</span>,                                          <span class="comment">/* bValueLen */</span></span><br><span class="line">        <span class="literal">NULL</span>,</span><br><span class="line">        GATT_PERM_NONE                              <span class="comment">/* permissions */</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">/* client characteristic configuration */</span></span><br><span class="line">    &#123;</span><br><span class="line">        ATTRIB_FLAG_VALUE_INCL | ATTRIB_FLAG_CCCD_APPL,                 <span class="comment">/* flags */</span></span><br><span class="line">        &#123;                                         <span class="comment">/* type_value */</span></span><br><span class="line">            LO_WORD(GATT_UUID_CHAR_CLIENT_CONFIG),</span><br><span class="line">            HI_WORD(GATT_UUID_CHAR_CLIENT_CONFIG),</span><br><span class="line">            <span class="comment">/* <span class="doctag">NOTE:</span> this value has an instantiation for each client, a write to */</span></span><br><span class="line">            <span class="comment">/* this attribute does not modify this default value:                */</span></span><br><span class="line">            LO_WORD(GATT_CLIENT_CHAR_CONFIG_DEFAULT), <span class="comment">/* client char. config. bit field */</span></span><br><span class="line">            HI_WORD(GATT_CLIENT_CHAR_CONFIG_DEFAULT)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="number">2</span>,                                          <span class="comment">/* bValueLen */</span></span><br><span class="line">        <span class="literal">NULL</span>,</span><br><span class="line">#<span class="keyword">if</span> SIMP_SRV_AUTHEN_EN</span><br><span class="line">        (GATT_PERM_READ_AUTHEN_REQ | GATT_PERM_WRITE_AUTHEN_REQ) <span class="comment">/* permissions */</span></span><br><span class="line">#<span class="keyword">else</span></span><br><span class="line">        (GATT_PERM_READ | GATT_PERM_WRITE)          <span class="comment">/* permissions */</span></span><br><span class="line">#endif</span><br><span class="line">    &#125;,</span><br><span class="line">#endif</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  Set service related data from application.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param[in] param_type            parameter type to set.</span></span><br><span class="line"><span class="comment">  * @param[in] len                   value length to be set.</span></span><br><span class="line"><span class="comment">  * @param[in] p_value             value to set.</span></span><br><span class="line"><span class="comment">  * @return parameter set result.</span></span><br><span class="line"><span class="comment">  * @retval 0 false</span></span><br><span class="line"><span class="comment">  * @retval 1 true</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">uart_ble_service_set_parameter</span><span class="params">(T_UART_PARAM_TYPE param_type, <span class="keyword">uint16_t</span> len, <span class="keyword">void</span> *p_value)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> ret = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (param_type)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        ret = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> UART_BLE_SERVICE_PARAM_V1_READ_CHAR_VAL:</span><br><span class="line">        <span class="keyword">if</span> (len &lt;= UART_READ_V1_MAX_LEN)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">memcpy</span>(uart_char_read_value, p_value, len);</span><br><span class="line">            uart_char_read_len = len;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            ret = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!ret)</span><br><span class="line">    &#123;</span><br><span class="line">        APP_PRINT_ERROR0(<span class="string">&quot;uart_ble_service_set_parameter failed&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief read characteristic data from service.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @param service_id          ServiceID of characteristic data.</span></span><br><span class="line"><span class="comment"> * @param attrib_index        Attribute index of getting characteristic data.</span></span><br><span class="line"><span class="comment"> * @param offset              Used for Blob Read.</span></span><br><span class="line"><span class="comment"> * @param p_length            length of getting characteristic data.</span></span><br><span class="line"><span class="comment"> * @param pp_value            data got from service.</span></span><br><span class="line"><span class="comment"> * @return Profile procedure result</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function">T_APP_RESULT  <span class="title">uart_ble_service_attr_read_cb</span><span class="params">(<span class="keyword">uint8_t</span> conn_id, T_SERVER_ID service_id,</span></span></span><br><span class="line"><span class="function"><span class="params">                                            <span class="keyword">uint16_t</span> attrib_index, <span class="keyword">uint16_t</span> offset, <span class="keyword">uint16_t</span> *p_length, <span class="keyword">uint8_t</span> **pp_value)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    T_APP_RESULT  cause  = APP_RESULT_SUCCESS;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (attrib_index)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        APP_PRINT_ERROR1(<span class="string">&quot;uart_ble_service_attr_read_cb, Attr not found, index %d&quot;</span>, attrib_index);</span><br><span class="line">        cause = APP_RESULT_ATTR_NOT_FOUND;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> UART_BLE_SERVICE_CHAR_V1_READ_INDEX:</span><br><span class="line">        &#123;</span><br><span class="line">            TUART_CALLBACK_DATA callback_data;</span><br><span class="line">            callback_data.msg_type = SERVICE_CALLBACK_TYPE_READ_CHAR_VALUE;</span><br><span class="line">            callback_data.msg_data.read_value_index = UART_READ_V1;</span><br><span class="line">            callback_data.conn_id = conn_id;</span><br><span class="line">            <span class="keyword">if</span> (pfn_uart_ble_service_cb)</span><br><span class="line">            &#123;</span><br><span class="line">                pfn_uart_ble_service_cb(service_id, (<span class="keyword">void</span> *)&amp;callback_data);</span><br><span class="line">            &#125;</span><br><span class="line">            *pp_value = uart_char_read_value;</span><br><span class="line">            *p_length = uart_char_read_len;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (cause);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">uart_write_post_callback</span><span class="params">(<span class="keyword">uint8_t</span> conn_id, T_SERVER_ID service_id, <span class="keyword">uint16_t</span> attrib_index,</span></span></span><br><span class="line"><span class="function"><span class="params">                                <span class="keyword">uint16_t</span> length, <span class="keyword">uint8_t</span> *p_value)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    APP_PRINT_INFO4(<span class="string">&quot;uart_write_post_callback: conn_id %d, service_id %d, attrib_index 0x%x, length %d&quot;</span>,</span><br><span class="line">                    conn_id, service_id, attrib_index, length);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief write characteristic data from service.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @param conn_id</span></span><br><span class="line"><span class="comment"> * @param service_id        ServiceID to be written.</span></span><br><span class="line"><span class="comment"> * @param attrib_index      Attribute index of characteristic.</span></span><br><span class="line"><span class="comment"> * @param length            length of value to be written.</span></span><br><span class="line"><span class="comment"> * @param p_value           value to be written.</span></span><br><span class="line"><span class="comment"> * @return Profile procedure result</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function">T_APP_RESULT <span class="title">uart_ble_service_attr_write_cb</span><span class="params">(<span class="keyword">uint8_t</span> conn_id, T_SERVER_ID service_id,</span></span></span><br><span class="line"><span class="function"><span class="params">                                            <span class="keyword">uint16_t</span> attrib_index, T_WRITE_TYPE write_type, <span class="keyword">uint16_t</span> length, <span class="keyword">uint8_t</span> *p_value,</span></span></span><br><span class="line"><span class="function"><span class="params">                                            P_FUN_WRITE_IND_POST_PROC *p_write_ind_post_proc)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    TUART_CALLBACK_DATA callback_data;</span><br><span class="line">    T_APP_RESULT  cause = APP_RESULT_SUCCESS;</span><br><span class="line">    APP_PRINT_INFO1(<span class="string">&quot;uart_ble_service_attr_write_cb write_type = 0x%x&quot;</span>, write_type);</span><br><span class="line">    *p_write_ind_post_proc = uart_write_post_callback;</span><br><span class="line">    <span class="keyword">if</span> (UART_BLE_SERVICE_CHAR_V2_WRITE_INDEX == attrib_index)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/* Make sure written value size is valid. */</span></span><br><span class="line">        <span class="keyword">if</span> (p_value == <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cause  = APP_RESULT_INVALID_VALUE_SIZE;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strncmp</span>(p_value, <span class="string">&quot;Parse.test&quot;</span>, length) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">BLE_PRINTF(<span class="string">&quot;BLE CMD TEST: %s, %d&quot;</span>, p_value, length);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">strncmp</span>(p_value, <span class="string">&quot;Parse.dis&quot;</span>, length) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">le_bond_clear_all_keys();<span class="comment">//在某些手机上面运行nRF UART2.0连接设备，在断开连接后，手机端不会主动和ble uart服务解绑，导致该手机无法在搜索到该设备，所以可以使用该指令，主动解绑连接的服务和断开连接。</span></span><br><span class="line">ble_disconnect();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/* Notify Application. */</span></span><br><span class="line">            callback_data.msg_type = SERVICE_CALLBACK_TYPE_WRITE_CHAR_VALUE;</span><br><span class="line">            callback_data.conn_id  = conn_id;</span><br><span class="line">            callback_data.msg_data.write.opcode = UART_WRITE_V2;</span><br><span class="line">            callback_data.msg_data.write.write_type = write_type;</span><br><span class="line">            callback_data.msg_data.write.len = length;</span><br><span class="line">            callback_data.msg_data.write.p_value = p_value;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (pfn_uart_ble_service_cb)</span><br><span class="line">            &#123;</span><br><span class="line">                pfn_uart_ble_service_cb(service_id, (<span class="keyword">void</span> *)&amp;callback_data);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        APP_PRINT_ERROR2(<span class="string">&quot;uart_ble_service_attr_write_cb Error: attrib_index 0x%x, length %d&quot;</span>,</span><br><span class="line">                         attrib_index,</span><br><span class="line">                         length);</span><br><span class="line">        cause = APP_RESULT_ATTR_NOT_FOUND;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cause;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief send notification of simple notify characteristic value.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param[in] conn_id           connection id</span></span><br><span class="line"><span class="comment">  * @param[in] service_id        service ID of service.</span></span><br><span class="line"><span class="comment">  * @param[in] p_value           characteristic value to notify</span></span><br><span class="line"><span class="comment">  * @param[in] length            characteristic value length to notify</span></span><br><span class="line"><span class="comment">  * @return notification action result</span></span><br><span class="line"><span class="comment">  * @retval 1 true</span></span><br><span class="line"><span class="comment">  * @retval 0 false</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">uart_ble_service_send_v3_notify</span><span class="params">(<span class="keyword">void</span> *p_value, <span class="keyword">uint16_t</span> length)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    APP_PRINT_INFO0(<span class="string">&quot;uart_ble_service_send_v3_notify&quot;</span>);</span><br><span class="line">    <span class="comment">// send notification to client</span></span><br><span class="line">    <span class="keyword">return</span> server_send_data(g_gap_connect_id, uart_service_id, UART_BLE_SERVICE_CHAR_V3_NOTIFY_INDEX, p_value,</span><br><span class="line">                            length,</span><br><span class="line">                            GATT_PDU_TYPE_NOTIFICATION);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> 0</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief send indication of simple indicate characteristic value.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param[in] conn_id           connection id</span></span><br><span class="line"><span class="comment">  * @param[in] service_id        service ID of service.</span></span><br><span class="line"><span class="comment">  * @param[in] p_value           characteristic value to notify</span></span><br><span class="line"><span class="comment">  * @param[in] length            characteristic value length to notify</span></span><br><span class="line"><span class="comment">  * @return notification action result</span></span><br><span class="line"><span class="comment">  * @retval 1 true</span></span><br><span class="line"><span class="comment">  * @retval 0 false</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">uart_ble_service_send_v4_indicate</span><span class="params">(<span class="keyword">uint8_t</span> conn_id, T_SERVER_ID service_id, <span class="keyword">void</span> *p_value,</span></span></span><br><span class="line"><span class="function"><span class="params">                                       <span class="keyword">uint16_t</span> length)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    APP_PRINT_INFO0(<span class="string">&quot;uart_ble_service_send_v4_indicate&quot;</span>);</span><br><span class="line">    <span class="comment">// send indication to client</span></span><br><span class="line">    <span class="keyword">return</span> server_send_data(conn_id, service_id, UART_BLE_SERVICE_CHAR_V4_INDICATE_INDEX, p_value,</span><br><span class="line">                            length, GATT_PDU_TYPE_ANY);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief update CCCD bits from stack.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @param conn_id           connection id.</span></span><br><span class="line"><span class="comment"> * @param service_id          Service ID.</span></span><br><span class="line"><span class="comment"> * @param index          Attribute index of characteristic data.</span></span><br><span class="line"><span class="comment"> * @param cccbits         CCCD bits from stack.</span></span><br><span class="line"><span class="comment"> * @return None</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">uart_ble_service_cccd_update_cb</span><span class="params">(<span class="keyword">uint8_t</span> conn_id, T_SERVER_ID service_id, <span class="keyword">uint16_t</span> index,</span></span></span><br><span class="line"><span class="function"><span class="params">                                     <span class="keyword">uint16_t</span> cccbits)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    TUART_CALLBACK_DATA callback_data;</span><br><span class="line">    <span class="keyword">bool</span> is_handled = <span class="literal">false</span>;</span><br><span class="line">    callback_data.conn_id = conn_id;</span><br><span class="line">    callback_data.msg_type = SERVICE_CALLBACK_TYPE_INDIFICATION_NOTIFICATION;</span><br><span class="line">    APP_PRINT_INFO2(<span class="string">&quot;uart_ble_service_cccd_update_cb: index = %d, cccbits 0x%x&quot;</span>, index, cccbits);</span><br><span class="line">    <span class="keyword">switch</span> (index)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> UART_BLE_SERVICE_CHAR_NOTIFY_CCCD_INDEX:</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (cccbits &amp; GATT_CLIENT_CHAR_CONFIG_NOTIFY)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// Enable Notification</span></span><br><span class="line">                callback_data.msg_data.notification_indification_index = UART_NOTIFY_INDICATE_V3_ENABLE;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// Disable Notification</span></span><br><span class="line">                callback_data.msg_data.notification_indification_index = UART_NOTIFY_INDICATE_V3_DISABLE;</span><br><span class="line">            &#125;</span><br><span class="line">            is_handled =  <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">if</span> 0</span></span><br><span class="line">    <span class="keyword">case</span> UART_BLE_SERVICE_CHAR_INDICATE_CCCD_INDEX:</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (cccbits &amp; GATT_CLIENT_CHAR_CONFIG_INDICATE)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// Enable Indication</span></span><br><span class="line">                callback_data.msg_data.notification_indification_index = UART_NOTIFY_INDICATE_V4_ENABLE;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// Disable Indication</span></span><br><span class="line">                callback_data.msg_data.notification_indification_index = UART_NOTIFY_INDICATE_V4_DISABLE;</span><br><span class="line">            &#125;</span><br><span class="line">            is_handled =  <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* Notify Application. */</span></span><br><span class="line">    <span class="keyword">if</span> (pfn_uart_ble_service_cb &amp;&amp; (is_handled == <span class="literal">true</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        pfn_uart_ble_service_cb(service_id, (<span class="keyword">void</span> *)&amp;callback_data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">采用可变参数列表</span></span><br><span class="line"><span class="comment">格式化输出字符串</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">nus_data_printf</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *fmt, ...)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_SEND_SIZE 18</span></span><br><span class="line">    va_list arg;</span><br><span class="line">    <span class="keyword">int</span> cnt;</span><br><span class="line">    <span class="keyword">char</span> buf[<span class="number">50</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> 1</span></span><br><span class="line">    va_start(arg, fmt);</span><br><span class="line">    cnt = vsnprintf(buf, <span class="keyword">sizeof</span>(buf), fmt, arg);</span><br><span class="line"><span class="comment">//生成的字符串的长度至多为n-1，为额外的终止空字符留下空间。</span></span><br><span class="line">    va_end(arg);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">    va_start(arg, fmt);</span><br><span class="line">    cnt = <span class="built_in">vsprintf</span>(buf, <span class="keyword">sizeof</span>(buf)/<span class="keyword">sizeof</span>(buf[<span class="number">0</span>]), fmt, arg);</span><br><span class="line">    va_end(arg);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">BT_DEBUG(<span class="string">&quot;%s, %d&quot;</span>, buf, cnt);</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> send_len = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; cnt; i+=send_len)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>((cnt - i) &gt; MAX_SEND_SIZE)</span><br><span class="line">&#123;</span><br><span class="line">send_len = MAX_SEND_SIZE;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">send_len = cnt-i;</span><br><span class="line">&#125;</span><br><span class="line">uart_ble_service_send_v3_notify(buf+i, send_len);</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief Simple ble Service Callbacks.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">const</span> T_FUN_GATT_SERVICE_CBS uart_ble_service_cbs =</span><br><span class="line">&#123;</span><br><span class="line">    uart_ble_service_attr_read_cb,  <span class="comment">// Read callback function pointer</span></span><br><span class="line">    uart_ble_service_attr_write_cb, <span class="comment">// Write callback function pointer</span></span><br><span class="line">    uart_ble_service_cccd_update_cb <span class="comment">// CCCD update callback function pointer</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief Add simple BLE service to the BLE stack database.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param[in]   p_func  Callback when service attribute was read, write or cccd update.</span></span><br><span class="line"><span class="comment">  * @return Service id generated by the BLE stack: @ref T_SERVER_ID.</span></span><br><span class="line"><span class="comment">  * @retval 0xFF Operation failure.</span></span><br><span class="line"><span class="comment">  * @retval others Service id assigned by stack.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="function">T_SERVER_ID <span class="title">uart_ble_service_add_service</span><span class="params">(<span class="keyword">void</span> *p_func)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">false</span> == server_add_service(&amp;uart_service_id,</span><br><span class="line">                                    (<span class="keyword">uint8_t</span> *)uart_ble_service_tbl,</span><br><span class="line">                                    <span class="keyword">sizeof</span>(uart_ble_service_tbl),</span><br><span class="line">                                    uart_ble_service_cbs))</span><br><span class="line">    &#123;</span><br><span class="line">        APP_PRINT_ERROR0(<span class="string">&quot;uart_ble_service_add_service: fail&quot;</span>);</span><br><span class="line">        uart_service_id = <span class="number">0xff</span>;</span><br><span class="line">        <span class="keyword">return</span> uart_service_id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    pfn_uart_ble_service_cb = (P_FUN_SERVER_GENERAL_CB)p_func;</span><br><span class="line">    <span class="keyword">return</span> uart_service_id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>BLE_UART.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*****************************************************************************************</span></span><br><span class="line"><span class="comment">*     Copyright(c) 2017, Realtek Semiconductor Corporation. All rights reserved.</span></span><br><span class="line"><span class="comment">*****************************************************************************************</span></span><br><span class="line"><span class="comment">  * @file     simple_ble_service.h</span></span><br><span class="line"><span class="comment">  * @brief    Demonstration of how to implement a self-definition service.</span></span><br><span class="line"><span class="comment">  * @details  Demonstration of different kinds of service interfaces.</span></span><br><span class="line"><span class="comment">  * @author</span></span><br><span class="line"><span class="comment">  * @date</span></span><br><span class="line"><span class="comment">  * @version</span></span><br><span class="line"><span class="comment">  * *************************************************************************************</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Define to prevent recursive inclusion */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> _UART_BLE_SERVICE_H_</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _UART_BLE_SERVICE_H_</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> __cplusplus</span></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span>  &#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span>      <span class="comment">/* __cplusplus */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Add Includes here */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;profile_server.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BLE_UART_ENABLE1</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GATT_UUID_UART_PROFILE                    0x0001</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GATT_UUID_CHAR_UART_V1_READ               0xB001</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GATT_UUID_CHAR_UART_V2_WRITE              0x0002</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GATT_UUID_CHAR_UART_V3_NOTIFY             0x0003</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GATT_UUID_CHAR_UART_V4_INDICATE           0xB004</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/** @defgroup SIMP_Service Simple Ble Service</span></span><br><span class="line"><span class="comment">  * @brief Simple BLE service</span></span><br><span class="line"><span class="comment">  * @&#123;</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="comment">/*============================================================================*</span></span><br><span class="line"><span class="comment"> *                              Macros</span></span><br><span class="line"><span class="comment"> *============================================================================*/</span></span><br><span class="line"><span class="comment">/** @defgroup SIMP_Service_Exported_Macros SIMP Service Exported Macros</span></span><br><span class="line"><span class="comment">  * @brief</span></span><br><span class="line"><span class="comment">  * @&#123;</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/** @defgroup SIMP_Service_Application_Parameters SIMP Service Application Parameters</span></span><br><span class="line"><span class="comment">  * @brief  Type of parameters set/got from application.</span></span><br><span class="line"><span class="comment">  * @&#123;</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">enum</span></span><br><span class="line">&#123;</span><br><span class="line">    UART_BLE_SERVICE_PARAM_V1_READ_CHAR_VAL = <span class="number">0x01</span>,</span><br><span class="line">&#125; T_UART_PARAM_TYPE;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** @&#125; */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/** @defgroup SIMP_Service_Upstream_Message SIMP Service Upstream Message</span></span><br><span class="line"><span class="comment">  * @brief  Upstream message used to inform application.</span></span><br><span class="line"><span class="comment">  * @&#123;</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/** @defgroup SIMP_Service_Read_Info SIMP Service Read Info</span></span><br><span class="line"><span class="comment">  * @brief  Parameter for reading characteristic value.</span></span><br><span class="line"><span class="comment">  * @&#123;</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> UART_READ_V1                                        1</span></span><br><span class="line"><span class="comment">/** @&#125; */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/** @defgroup SIMP_Service_Write_Info SIMP Service Write Info</span></span><br><span class="line"><span class="comment">  * @brief  Parameter for writing characteristic value.</span></span><br><span class="line"><span class="comment">  * @&#123;</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> UART_WRITE_V2                                       1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/** @&#125; */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/** @defgroup SIMP_Service_Notify_Indicate_Info SIMP Service Notify Indicate Info</span></span><br><span class="line"><span class="comment">  * @brief  Parameter for enable or disable notification or indication.</span></span><br><span class="line"><span class="comment">  * @&#123;</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> UART_NOTIFY_INDICATE_V3_ENABLE     1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> UART_NOTIFY_INDICATE_V3_DISABLE    2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> UART_NOTIFY_INDICATE_V4_ENABLE     3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> UART_NOTIFY_INDICATE_V4_DISABLE    4</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/** @&#125; */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> UART_READ_V1_MAX_LEN               300</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/** @&#125; End of SIMP_Service_Upstream_Message */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/** @&#125; End of SIMP_Service_Exported_Macros */</span></span><br><span class="line"><span class="comment">/*============================================================================*</span></span><br><span class="line"><span class="comment"> *                              Types</span></span><br><span class="line"><span class="comment"> *============================================================================*/</span></span><br><span class="line"><span class="comment">/** @defgroup SIMP_Service_Exported_Types SIMP Service Exported Types</span></span><br><span class="line"><span class="comment">  * @brief</span></span><br><span class="line"><span class="comment">  * @&#123;</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/** @defgroup TSIMP_WRITE_MSG TSIMP_WRITE_MSG</span></span><br><span class="line"><span class="comment">  * @brief Simple BLE service written msg to application.</span></span><br><span class="line"><span class="comment">  * @&#123;</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">uint8_t</span> opcode; <span class="comment">//!&lt; ref:  @ref SIMP_Service_Write_Info</span></span><br><span class="line">    T_WRITE_TYPE write_type;</span><br><span class="line">    <span class="keyword">uint16_t</span> len;</span><br><span class="line">    <span class="keyword">uint8_t</span> *p_value;</span><br><span class="line">&#125; TUART_WRITE_MSG;</span><br><span class="line"><span class="comment">/** @&#125; End of TSIMP_WRITE_MSG */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/** @defgroup TSIMP_UPSTREAM_MSG_DATA TSIMP_UPSTREAM_MSG_DATA</span></span><br><span class="line"><span class="comment">  * @brief Simple BLE service callback message content.</span></span><br><span class="line"><span class="comment">  * @&#123;</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">union</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">uint8_t</span> notification_indification_index; <span class="comment">//!&lt; ref: @ref SIMP_Service_Notify_Indicate_Info</span></span><br><span class="line">    <span class="keyword">uint8_t</span> read_value_index; <span class="comment">//!&lt; ref: @ref SIMP_Service_Read_Info</span></span><br><span class="line">    TUART_WRITE_MSG write;</span><br><span class="line">&#125; TUART_UPSTREAM_MSG_DATA;</span><br><span class="line"><span class="comment">/** @&#125; End of TSIMP_UPSTREAM_MSG_DATA */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/** @defgroup TSIMP_CALLBACK_DATA TSIMP_CALLBACK_DATA</span></span><br><span class="line"><span class="comment">  * @brief Simple BLE service data to inform application.</span></span><br><span class="line"><span class="comment">  * @&#123;</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">uint8_t</span>                 conn_id;</span><br><span class="line">    T_SERVICE_CALLBACK_TYPE msg_type;</span><br><span class="line">    TUART_UPSTREAM_MSG_DATA msg_data;</span><br><span class="line">&#125; TUART_CALLBACK_DATA;</span><br><span class="line"><span class="comment">/** @&#125; End of TSIMP_CALLBACK_DATA */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/** @&#125; End of SIMP_Service_Exported_Types */</span></span><br><span class="line"><span class="comment">/*============================================================================*</span></span><br><span class="line"><span class="comment"> *                              Functions</span></span><br><span class="line"><span class="comment"> *============================================================================*/</span></span><br><span class="line"><span class="comment">/** @defgroup SIMP_Service_Exported_Functions SIMP Service Exported Functions</span></span><br><span class="line"><span class="comment">  * @brief</span></span><br><span class="line"><span class="comment">  * @&#123;</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief Add simple BLE service to the BLE stack database.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param[in]   p_func  Callback when service attribute was read, write or cccd update.</span></span><br><span class="line"><span class="comment">  * @return Service id generated by the BLE stack: @ref T_SERVER_ID.</span></span><br><span class="line"><span class="comment">  * @retval 0xFF Operation failure.</span></span><br><span class="line"><span class="comment">  * @retval others Service id assigned by stack.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="function">T_SERVER_ID <span class="title">uart_ble_service_add_service</span><span class="params">(<span class="keyword">void</span> *p_func)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  Set service related data from application.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param[in] param_type            parameter type to set.</span></span><br><span class="line"><span class="comment">  * @param[in] len                   value length to be set.</span></span><br><span class="line"><span class="comment">  * @param[in] p_value             value to set.</span></span><br><span class="line"><span class="comment">  * @return parameter set result.</span></span><br><span class="line"><span class="comment">  * @retval 0 false</span></span><br><span class="line"><span class="comment">  * @retval 1 true</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">uart_ble_service_set_parameter</span><span class="params">(T_UART_PARAM_TYPE param_type, <span class="keyword">uint16_t</span> len, <span class="keyword">void</span> *p_value)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief send notification of simple notify characteristic value.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param[in] conn_id           connection id</span></span><br><span class="line"><span class="comment">  * @param[in] service_id        service ID of service.</span></span><br><span class="line"><span class="comment">  * @param[in] p_value           characteristic value to notify</span></span><br><span class="line"><span class="comment">  * @param[in] length            characteristic value length to notify</span></span><br><span class="line"><span class="comment">  * @return notification action result</span></span><br><span class="line"><span class="comment">  * @retval 1 true</span></span><br><span class="line"><span class="comment">  * @retval 0 false</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">uart_ble_service_send_v3_notify</span><span class="params">(<span class="keyword">void</span> *p_value, <span class="keyword">uint16_t</span> length)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief send indication of simple indicate characteristic value.</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * @param[in] conn_id           connection id</span></span><br><span class="line"><span class="comment">  * @param[in] service_id        service ID of service.</span></span><br><span class="line"><span class="comment">  * @param[in] p_value           characteristic value to notify</span></span><br><span class="line"><span class="comment">  * @param[in] length            characteristic value length to notify</span></span><br><span class="line"><span class="comment">  * @return notification action result</span></span><br><span class="line"><span class="comment">  * @retval 1 true</span></span><br><span class="line"><span class="comment">  * @retval 0 false</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">uart_ble_service_send_v4_indicate</span><span class="params">(<span class="keyword">uint8_t</span> conn_id, T_SERVER_ID service_id,</span></span></span><br><span class="line"><span class="function"><span class="params">                                       <span class="keyword">void</span> *p_value, <span class="keyword">uint16_t</span> length)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** @&#125; End of SIMP_Service_Exported_Functions */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/** @&#125; End of SIMP_Service */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">nus_data_printf</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *fmt, ...)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> __cplusplus</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">/* _SIMPLE_BLE_SERVICE_H_ */</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>利用宏转化为格式化字符串输出<br>##__VA_ARGS__ 宏前面加上##的作用在于，当可变参数的个数为0时，这里的##起到把前面多余的”,”去掉的作用,否则会编译出错</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">if</span> BLE_PRINTF_EN</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BLE_PRINTF(fmt, ...)do&#123; nus_data_printf(fmt, ##__VA_ARGS__); &#125;while(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>BLE_PRINTF(fmt, ...)do&#123; &#125;while(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><p>  调试了两天基本把这部分代码调试通过，Nordic Uart软件可以正常识别ble uart服务，且正常收发数据，识别UART的关键就在于服务以及TX属性和RX属性的UUID，只要这几点配置正确，其他的参考例程基本没什么难点。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;  在realtek板子上没有自带ble uart服务的例程代码，需要自己定义，最近因项目需求，通过nordic UART APP利用蓝牙打印数据，所以自己定义ble uart服务来适配NORDIC UART服务。&lt;/p&gt;</summary>
    
    
    
    <category term="蓝牙" scheme="http://xianke5200.github.io/categories/%E8%93%9D%E7%89%99/"/>
    
    
    <category term="realtek" scheme="http://xianke5200.github.io/tags/realtek/"/>
    
  </entry>
  
  <entry>
    <title>内存</title>
    <link href="http://xianke5200.github.io/2020/10/27/%E5%86%85%E5%AD%98/"/>
    <id>http://xianke5200.github.io/2020/10/27/%E5%86%85%E5%AD%98/</id>
    <published>2020-10-27T10:04:30.000Z</published>
    <updated>2021-03-18T11:19:44.042Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2020/10/27/%E5%86%85%E5%AD%98/20210318191329.png" alt="20210318191329"></p><p>  主存是一种非常重要的资源，不管存储器有多大，程序大小的增长速度比内存容量的增长速度要快很多。<a id="more"></a><br>  经过多年的研究发现，科学家提出了一种分层存储器体系，从顶层先下一次为寄存器、高速缓存、主存和磁盘；位于顶层的存储器速度最快，但是容量最小，成本非常高，层级结构向下其访问速度会变慢，但是容量会变大，相对造价也就越便宜。操作系统中管理内存层次结构的部分称为内存管理器，主要是有效地管理内存，记录那些内存是正在使用的，在进程需要时分配内存以及在晋城完成时回收内存。</p><h1 id="无存储器抽象"><a href="#无存储器抽象" class="headerlink" title="无存储器抽象"></a>无存储器抽象</h1><p>  最简单的存储器抽象是无存储器。每一个程序都直接访问物理内存。所以这种情况计算机不可能会有两个应用程序在内存中。<br>  不过即使存储器模型就是物理内存，还是存在一些可变体的，下面展示了三种变体：<br>  <img src="/2020/10/27/%E5%86%85%E5%AD%98/20210318191322.png" alt="20210318191322"><br>  模型a和c的缺点是用户程序中的错误可能会破坏操作系统，导致灾难性的后果。<br>  按照这种方式组织系统时，通常一个时刻只能有一个进程在运行。<br>  在没有存储器抽象的系统中实现并行性，一种方式是使用多线程来变成。由于同一进程中的多线程内部共享同一内存映像，那么实现并行也就不是什么问题了。但是人们通常希望能够在同一时间内运行没有关联的程序，这是线程抽象所不能提供的。</p><h2 id="运行多个程序"><a href="#运行多个程序" class="headerlink" title="运行多个程序"></a>运行多个程序</h2><p>  即便没有存储器抽象，同时运行多个程序也是有可能的。操作系统只需要把当前内存中的所有内容保存到磁盘文件中，再把程序读入内存即可。只要某一时刻内存只有一个程序在运行就不会有冲突的情况发生。<br>  在额外特殊硬件的帮助下，即使没有交换功能，也可以并行运行多个应用程序。<br>在IBM360中，内存被划分为2KB的区域块，每块区域被分配一个4位的保护键，保护键存储在CPU的特殊寄存器中，一个内存为1MB的机器只需要512个这样的4位寄存器，容量为256字节PSW中有一个4位码。一个运行中的进程如果访问键与其PSW中保存的码不同，360硬件会捕获这种情况，只有操作系统可以修改保护键，这样可以防止进程之间、用户进程和操作系统之间的干扰。<br> 但是这种解决方式有一个缺陷，当两个应用程序都引用绝对地址物理地址，并且都引用同一个物理地址时，其中一个应用程序会执行错误的操作指令。可以采用一种称为静态重定位的技术来修改它。当一个程序被加载到16384地址时，常数16384被加到每一个程序地址上（即每一个被程序引用的物理地址都加上16384）。这种机制在不出错误的情况下是可行的，但不是一种通用的解决方式，同时会减慢装载速度，而且，她需要所有可执行程序中的额外信息，以指示哪些包含（可重定位的地址），哪些不包含。类似MOV REGISTER1, 28会把数字移到REGISTE中则不会重定向。所以装载器需要一定的能力来辨别地址和常数。</p><h1 id="一种存储器抽象：地址空间"><a href="#一种存储器抽象：地址空间" class="headerlink" title="一种存储器抽象：地址空间"></a>一种存储器抽象：地址空间</h1><p>  把物理地址暴露给进程会有几个主要的缺点：<br>  1.如果用户程序可以寻址内存的每个字节，它们可以很容易的破坏操作系统，从而使系统停止运行，即使只有一个用户进程运行的情况，这个问题也存在。<br>  2.这种模型想要运行多个程序是很困难的，在系统没有物理内存的情况下很难实现</p><h2 id="地址空间的概念"><a href="#地址空间的概念" class="headerlink" title="地址空间的概念"></a>地址空间的概念</h2><p>  要使多个应用程序同时运行在内存中，必须要解决两个问题：保护和重定位。<br>  一种方式是用保护密钥标记内存块，并将执行过程的密钥与提取的每个存储字的密钥进行比较，但是这种方式只能解决破坏才做系统的问题，但是不能解决多进程在内存中同时运行的问题。<br>  还有一种方式是创造一个存储器抽象：地址空间。就像进程的概念创建了一种抽象的CPU来运行程序，地址空间也创建了一种抽象内存供程序使用。地址空间是进程可以用来寻址内存的地址集。</p><h3 id="基址寄存器和变址寄存器"><a href="#基址寄存器和变址寄存器" class="headerlink" title="基址寄存器和变址寄存器"></a>基址寄存器和变址寄存器</h3><p>  最简单分方法是使用动态重定位技术，通过一种简单的方式将每个进程的地址空间映射到物理内存的不同区域。经典办法是给每个CPU配置两个特殊的硬件寄出器，通常叫做基址寄存器和变址寄存器。<br>  基址寄存器：存储数据内存的起始地址<br>  变址寄存器：存储应用程序的长度<br>  每当进程引用内存以获取指令读取、写入数据时，CPU都会自动将进程添加到进程生成的地址中，然后发送到内存总线上。同时检查程序提供的地址是否大于或等于变址寄存器中的值。但是这种方式的缺点就是，每次访问内存都会进行ADD和CMP运算，CMP运算可以执行的很快，但是加法就会相对慢一点，除非使用特殊的加法电路，否则加法因进位传播时间而变慢。</p><h2 id="交换技术"><a href="#交换技术" class="headerlink" title="交换技术"></a>交换技术</h2><p>  如果计算机的物理内存足够大来容纳所有的进程，那么之前提及的方案或多或少是可行的，但是实际上，所有进程需要的RAM总容量要远远高于内存的容量。所以针对上面内存不足的问题，有两种处理方式：<br>  1.交换技术：把一个进程完整的调入内存，然后在内存中运行一段时间，再把它放回磁盘。空闲进程会存储在磁盘中，所以这些进程在没有运行时不会占用太多内存<br>  2.虚拟内存：虚拟内存技术允许应用程序部分运行在内存中。</p><h3 id="交换过程"><a href="#交换过程" class="headerlink" title="交换过程"></a>交换过程</h3><p> 交换在内存中常见了多个空闲区，内存会把所有的空闲区尽可能的向下移动合并成为一个大的空闲区，这项技术称为内存紧缩，但是这项技术通常不会使用，因为消耗很多的CPU时间。<br> 有一个值得注意的问题是，当进程被创建或者换入内存时应该为它分配多大的内存，如果进程被创建后它的大小是固定的并且不再改变，操作系统会准确的按其需要的大小进行分配。但是如果进程的data segment能够自动增长（通过动态分配堆中的内存），肯定会出问题<br> 从逻辑层面操作系统会把数据分成不同的段来存储：<br> 代码段：又称为文本段，用来存放指令，运行代码的一块内存空间。此空间大小在代码运行前就已经确定，内存空间一般只属于只读，某些架构的代码也允许可写，在代码段中也可能包含一些只读的常数变量。<br> 数据段：可读可写，存储初始化的全局变量和初始化的static变量，数据段中的数据的生存期是随程序持续性（随进程持续性）：进程创建就存在，进程死亡就消失。<br> bss段：可读可写，存储未初始化的全局变量和未初始化的static变量，bss段中数据的生存期随进程持续性，bss段中的数据一般默认为0<br> rodata段：只读数据，比如printf语句中的格式字符串和开关语句的跳转表，也及时常量区。<br> 栈：可读可写，存储的函数或代码中的局部变量，栈的生存期随代码持续性，代码块运行就给你分配空间，代码结束就自动收回空间。<br> 堆：可读可写，存储的是程序运行期间动态分配的malloc/realloc的空间，堆的生存期随进程持续性，从malloc/realloc到free一直存在。<br> 段定义是用来区分或者划分区域的意思。汇编语言中的segment伪指令表示段定义的起始，ends伪指令表示段定义的结束，段定义是一段连续的内存空间。<br> 所以内存针对自动增长的区域，会有三种处理方式：<br> 1.如果一个进程和空闲区域相邻，那么可把该空闲区分配费进程以供其增大<br> 2.如果进程相邻的是另一个进程，就会有两种处理方式：要么把需要增长的进程移动到一个内存中空闲区足够打的区域，要么把一个或多个进程交换出去，以便生成一个打的空闲区<br> 3.如果一个进程在内存中不能增长，而且磁盘上的交换区也满了，那么这个进程只有挂起一些空闲空间（或者可以结束该进程）。<br> 上面只针对单一或者一小部分需要增长的进程采用的方式，如果大部分进程都要在运行时增长，可以在换入或移动进程时为它分配一些额外的内存。，然而当进程被换出磁盘上时，应该只交换实际上使用的内存，将额外的内存交换也是一种浪费。<br> 如果进程有两个可增长的段，供变量动态分配和释放的作为堆使用一个数据段，以及存放局部变量与返回地址的一个堆栈段，进程的堆栈段在进程所占的顶端向下增长，紧接着在程序段后的数据段向上增长。</p><h3 id="空闲内存管理"><a href="#空闲内存管理" class="headerlink" title="空闲内存管理"></a>空闲内存管理</h3><p>  在进行内存动态分配时，操作系统必须对其进行管理，有两种监控内存使用的方式：<br>  位图<br>  空闲列表</p><h4 id="位图"><a href="#位图" class="headerlink" title="位图"></a>位图</h4><p>  使用位图方法时，内存可能被划分为小到几个字或大到几千字节的分配单元。每个分配单元对应位图的一位。<br>  位图提供了一种在固定大小的内存中跟踪内存的使用情况，因为位图的大小取决于内存和分配单元的大小。这种方法有一个问题是，当决定把具有k个分配单元的进程放入内存时，内存管理器必须搜索位图，在位图中找到能够运行k个连续0位的串，这回消耗大量的时间。</p><h4 id="使用链表进行管理"><a href="#使用链表进行管理" class="headerlink" title="使用链表进行管理"></a>使用链表进行管理</h4><p>  维护一个记录已分配内存段和空闲内存段的链表，段会包含进程或者两个进程的空闲区域。链表中的每一项都可以代表一个空闲区或者是进程的起始标志，长度和下一个链表项的位置。<br>  当按照地址顺序在链表中存放进程和空闲区时，假设内存管理器知道应该分配多少内存，最简单的算法是使用首次适配，内存管理器会沿着段列表进行扫描，直到找到一个足够大的空闲区为止，除非空闲区大小和要分配的空间大小一样，否则将空闲区分为两部分，一部分供进程使用，一部分生成新的空闲区。<br>  首次适配的一个变体是下次适配，和首次适配工作方式相同，只有一个不同之处就是下次适配在每次找到合适的空闲区时会记录当时的位置，以便下次寻找空闲区时从上次结束的地方开始搜索。性能略低于首次适配算法。<br>  广泛使用的算法是最佳适配，从头到尾寻找整个链表，找出能够容纳进程的最小空闲区。最佳适配会试图找出最接近实际需要的空闲区，以最好的匹配请求和可用空闲区，而不是先一次拆分一个以后可能会用到的打的空闲区。最佳适配算法的性能要比首次适配差，而且会产生大量无用的小缓冲区。<br>  为了避免空闲区会分裂出很多非常小的缓冲区，可以采用最差适配算法，即总是分配最大的内存区域。是新分配的空闲区比较大从而可以继续使用。<br>  快速适配算法，为那些常用大小的空闲区维护单独的链表。寻找一个指定代销的空闲区也是十分快速的，但是在一个进程终止或被换出时，寻找它的相邻块并查看是否可以合并的过程都是非常耗时的。</p><h1 id="虚拟内存"><a href="#虚拟内存" class="headerlink" title="虚拟内存"></a>虚拟内存</h1><p>  尽管基址寄存器和变址寄存器用来创建地址空间的抽象，但是这有一个问题需要解决：管理软件的不断增大。<br>  虚拟内存：每个程序都有自己的地址空间，这个地址空间被划分为多个称为页面的块。每一个都是连续的地址范围。这些页被映射到物理内存，但不是所有的页都必须在内存中才能运行程序。当程序引用到一部分在物理内存中的地址空间时，硬件会立刻执行必要的映射。当程序引用到一部分不在物理内存中的地址空间时，由操作系统负责将缺失的部分装入物理内存并重新执行失败的命令。<br>  虚拟地址是对基址寄存器和变址寄存器的一种概述。<br>  可以将整个地址空间已很小的单位映射到物理内存中而不是仅仅针对text和data区进行重定位。</p><p>  假设有一个16位地址的计算机，地址从0-64K-1，这些事虚拟地址，然而只有32K的物理地址。</p><h2 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h2><p>  大部分虚拟内存系统都会使用一种分页技术。在使用虚拟内存时，虚拟地址不会直接发送到内存总线上。相反会使用MMU内存管理单元吧虚拟地址映射为物理内存地址。</p><h3 id="存在映射的页如何映射"><a href="#存在映射的页如何映射" class="headerlink" title="存在映射的页如何映射"></a>存在映射的页如何映射</h3><p>  虚拟地址空间由固定大小的单元组成，这种固定大小的单元称为页。而相对的，物理内存中也有固定大小的物理单元，称为页框。页和页框的大小一样。</p><h3 id="未映射的页如何映射"><a href="#未映射的页如何映射" class="headerlink" title="未映射的页如何映射"></a>未映射的页如何映射</h3><p>  当程序访问一个未映射的页面时，MMU注意到该页面未被映射，于是CPU会陷入到操作系统中；这个陷入称为缺页中断或者缺页错误。操作系统会选择一个很少使用的页并把它的内容写入磁盘。随后把需要访问的页面读到刚才回收的页框中，修改映射关系，然后重新启动引起陷入的指令。</p><h2 id="页表"><a href="#页表" class="headerlink" title="页表"></a>页表</h2><p>  可用页号作为页表的索引，以得出对应于该虚拟页面的页框号。<br>  每个页表项包含一个四bit的数据，高三位表示对应页框号，低位表示该项是否被映射。<br>  虚拟地址到物理地址的映射可以总结为：虚拟地址被分为虚拟页号高位部分和偏移量。对于16位地址和4KB的页面大小，高四位可以指定16个虚拟页面中的一页，低12位接着确定了所选页面的偏移量。</p><h3 id="页表项的结构"><a href="#页表项的结构" class="headerlink" title="页表项的结构"></a>页表项的结构</h3><p><img src="/2020/10/27/%E5%86%85%E5%AD%98/20210318191311.png" alt="20210318191311"><br>  不同计算机的页表项可能不同，但是一般来说都是32位的。页表项中最重要的字段就是页框号。然后就是在/不在位，如果此位为1，那么页表项是有效的并且能够被使用。为0，则表示该页表项对应的虚拟页面不在内存中，访问页面会引起一个缺页异常。<br>  保护位：0表示可读可写，1表示只读<br>  修改位和访问位会跟踪页面的使用情况。当一个页面被写入时，硬件会自动的设置修改位。<br>  访问位在页面被访问时被设置，不管是读还是写。<br>  高速缓冲禁止位，对于映射到设备寄存器还是内存起到了关键作用。具有独立的I/O空间而不是用内存映射I/O的机器来说，并不需要这意味。</p><h2 id="加速分页过程"><a href="#加速分页过程" class="headerlink" title="加速分页过程"></a>加速分页过程</h2>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2020/10/27/%E5%86%85%E5%AD%98/20210318191329.png&quot; alt=&quot;20210318191329&quot;&gt;&lt;/p&gt;
&lt;p&gt;  主存是一种非常重要的资源，不管存储器有多大，程序大小的增长速度比内存容量的增长速度要快很多。&lt;/p&gt;</summary>
    
    
    
    <category term="操作系统" scheme="http://xianke5200.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
  </entry>
  
  <entry>
    <title>认识操作系统</title>
    <link href="http://xianke5200.github.io/2020/10/27/%E8%AE%A4%E8%AF%86%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    <id>http://xianke5200.github.io/2020/10/27/%E8%AE%A4%E8%AF%86%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</id>
    <published>2020-10-27T10:04:30.000Z</published>
    <updated>2020-11-14T14:34:08.748Z</updated>
    
    <content type="html"><![CDATA[<h1 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h1><p>  操作系统就是响应用户输入的指令，控制硬件，从而满足用户需求的软件；它的任务就是为用户程序提供一个更好、更简单、更清晰的计算机模型。<a id="more"></a><br>  大部分计算机有两种运行模式：内核态（管态或核心态）和用户态。操作系统运行在内核态中，其他部分运行在用户态下。</p><h1 id="计算机硬件简介"><a href="#计算机硬件简介" class="headerlink" title="计算机硬件简介"></a>计算机硬件简介</h1><h2 id="CPU"><a href="#CPU" class="headerlink" title="CPU"></a>CPU</h2><p>  CPU是计算机的大脑，主要和内存进行交互，从内存中读取指令，然后解码，执行。<br>  每个CPU都有一组可以执行的特定指令集。x86的CPU不能执行ARM的程序，并且ARM的CPU不能执行x86的程序。<br>  由于访问内存获取执行或数据要比执行指令话费的时间长，因此所有的CPU内部都会包含一些==寄存器 #F44336==来保存关键变量和临时结果。<br>  除了保存关键变量和临时结果的通用寄存器外，大多数计算机还有几个特殊的寄存器。==程序计数器 #F44336==：指示下一条需要从内存提取指令的地址。==堆栈指针 #F44336==：它指向当前栈的顶端。====PSW（程序状态寄存器） #F44336== #F44336==：由操作系统维护的8个字节long类型的数据集合，它会跟踪当前系统的状态，同时该寄存器中的一个二进制位会控制当前计算机运行在内核态还是用户态，除非发生系统结束，否则我们可以忽略PSW。</p><h2 id="多线程和多核芯片"><a href="#多线程和多核芯片" class="headerlink" title="多线程和多核芯片"></a>多线程和多核芯片</h2><p>  多线程允许CPU保持两个不同的线程状态并且在纳秒级的时间完成切换。<br>  多核芯片就是一个CPU上具有多个完整的处理器或者内核。</p><h2 id="内存"><a href="#内存" class="headerlink" title="内存"></a>内存</h2><p>  理想情况下，内存应该非常快速（比执行一条指令要快，从而不会拖慢CPU执行效率），而且足够大且便宜，但是目前的技术手段无法满足三者的要求。于是采用不同的处理方式，存储器系统采用一种分层次的机构，分为寄存器、高速缓存、主存和磁盘。</p><h3 id="寄存器"><a href="#寄存器" class="headerlink" title="寄存器"></a>寄存器</h3><p>  采用和CPU一样的材料制成，和CPU一样快，程序需要在软件中自行管理这些寄存器，即决定如何使用他们。</p><h3 id="高速缓存"><a href="#高速缓存" class="headerlink" title="高速缓存"></a>高速缓存</h3><p>  位于寄存器下面的是高速缓存，多数有硬件控制。<br>  使用最频繁的高速缓存行保存在CPU的内部或者非常靠近CPU的高速缓存中。<br>  现代CPU设计了两种缓存，第一级缓存（L1 cache）总是位于CPU内部，用来将已解码的指令调入CPU的执行引擎，典型的L1 cache的大小为16KB。二级缓存（L2 cache）用来存放最近使用过的关键字，一般是兆字节为单位。</p><h3 id="主存"><a href="#主存" class="headerlink" title="主存"></a>主存</h3><p>  在下一层次是主存，这是内存系统的主力军，主存通常叫做RAM（随机存取存储器）。断电后，存储的内容会丢失。<br>  除了主存外，计算机还具有少量非易失性随机存取存储器，掉电后存储的内容不会丢失，但是ROM的内容一旦存储后就不能再被修改。<br>  EEPROM和FLASH也是非易失性的，但是可以反复擦除和重写。</p><h3 id="磁盘"><a href="#磁盘" class="headerlink" title="磁盘"></a>磁盘</h3><p>  再下一个层次就是磁盘，成本低，容量大，但是随机访问数据的时间大约慢了三个数量级。<br>  从一个程序切换到另一个程序的机制称为上下文切换。</p><h2 id="I-O设备"><a href="#I-O设备" class="headerlink" title="I/O设备"></a>I/O设备</h2><p>  I/O设备一般包括两个部分：设备控制器和设备本身。<br>  控制器本身是一块芯片或者一组芯片，它能接收操作系统的指令，控制物理设备。控制器的工作就是为操作系统提供一个更简单的（但仍然非常复杂）的接口，也就是屏蔽物理细节。<br>  设备本身有一个相对简单的接口这是因为接口既不能做很多工作，而且已经被标准化了。</p><h2 id="总线"><a href="#总线" class="headerlink" title="总线"></a>总线</h2><p>  早期的IBM PC采用单个总线处理请求，但是随着处理器核内存变得越来越快，单个总线处理所有请求的能力也达到了上线。导致了多总线结构的出现。<br>  x86系统包含很多总线：高速缓存、内存、PCIe、PCI、USB、SATA和DMI，每条总线都有不同的传输速率和功能。<br>  其中最主要的总线是PCIe总线，选用串行总线架构，并通过单个连接（称为通道）发送消息中的所有比特数据，就像网络数据包一样。<br>  CPU通过DDR3总线和内存对话，通过PCIe总线与外围图形设备（GPU）对话，通过DMI总线经集成中心与所有其它设备对话，而集成控制中心通过串行总线与USB设备对话，通过SATA总线与硬盘和DVD驱动器对话。通过PCIe传输以太网络帧。<br>  USB与用来将所有慢速I/O设备与计算机相连的设备。<br>  SCSI总线是一种高速总线，用在高速硬盘，扫描仪和其他需要较大宽带的设备上。</p><h2 id="计算机启动过程"><a href="#计算机启动过程" class="headerlink" title="计算机启动过程"></a>计算机启动过程</h2><p>  每台计算机上有一块双亲板，也就是母板，母板也就是主板，它是计算机最重要的部件之一。<br>  在母板上有一个称为基本输入输出系统（BIOS）的程序，在计算机启动时，BIOS先开启，他会首先检查所安装的RAM数量，键盘和其他挤出设备是否已安装并且正常响应，接着它开始扫描PCIe和PCI总线并找出连在上面的所有设备。即插即用设备也会被记录下来，如果现有的设备和系统上一次启动时的设备不同，则新的设备将被重新配置，然后BIOS通过尝试存储在CMOS存储器中的设备清单尝试启动设备。<br>  CMOS是电脑主板上的一块可读写的RAM芯片，用来保存BIOS设置完电脑硬件参数后的数据，仅用来存放数据。</p><h2 id="操作系统概念"><a href="#操作系统概念" class="headerlink" title="操作系统概念"></a>操作系统概念</h2><p>  操作系统中进程、地址空间、文件等是需要理解的核心内容。</p><h3 id="进程"><a href="#进程" class="headerlink" title="进程"></a>进程</h3><p>  进程的本质就是操作系统执行的一个程序，与每个进程相关的是地址空间，这是某个最小值的存储位置（通常是零）到某个最大值的存储位置的列表。地址空间存放有可执行程序，程序所需要的数据和它的栈，与每个进程相关的还有资源集，包括寄存器（一般包括程序计数器和堆栈指针）、打开的清单、突发的报警、有关的进程清单和其他需要执行程序的信息。进程可以看做是容纳运行一个程序所有信息的一个容器。<br>  在许多操作系统中，与一个进程有关的所有信息，除了改进程自身地址空间的内容以外，均存放在操作系统的一张表中，称为进程表，==进程表 #F44336==是数组或者链表结构，当前存在每个进程都要占据其中的一项。<br>  系统管理器授权每个进程使用一个戈丁的UID，每个启动的集成都会有一个操作系统赋予的UID，子进程拥有和父进程相同的UID；用户可以是某个组的成员，每个组也有一个GID。<br>  在UNIX操作系统中有一个UID是超级用户，或者Windows中的管理员，它具有特殊的权利，可以违背一些保护原则。</p><h3 id="地址空间"><a href="#地址空间" class="headerlink" title="地址空间"></a>地址空间</h3><p>  每台计算机都有一些主存来保存正在执行的程序。简单的操作系统中，仅有一个应用程序运行在内存中，为了运行第二个引用程序，需要把第一个应用程序移除才能把第二个程序装入内存。复杂一些的操作系统会允许多个应用程序同时装入内存中运行。为了防止应用程序之间相互干扰（包括操作系统），需要某种保护机制虽然此机制是在硬件中实现的，但是却是由操作系统控制的。<br>  另一个同等重要并与存储器有关的内容是管理进程的地址空间。每个进程都有一些可以使用的地址集合，典型值从0开始知道某个最大值。一个进程可拥有的最大的地址空间小于主存。<br>  当进程比计算机拥有的主存还大的地址空间，可以使用虚拟内存技术，操作系统可以把部分地址空间装入主存部分留在磁盘上，并在需要时来回切换它们。</p><h3 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h3><p>  操作系统一箱主要功能是屏蔽磁盘和其他I/O设备的细节特性，提供一个良好、清晰的独立于设备的抽象文件模型。<br>  为了提供保存文件的地方，大多数个人计算机操作系统都有目录的概念，从而可以把文件分组。<br>  目录项可以是文件或者目录，目录和目录之间也可以嵌套，这样就产生了文件系统。<br>  进程和文件层次都是以树状的结构组织，但这两种树状结构有不少不同之处；一般进程的树状结构层次不深（很少超过三层），而文件系统的树状结构要深一些，通常会到四层甚至五层；进程的树状结构，最多存在几分钟，而目录层次则可能存在很长时间；进程和文件在权限保护方面也是有区别的，父进程能控制和访问子进程，而在文件和目录中文件所有者之外的用户也可以访问该文件。<br>  在UNIX中另外一个重要的概念是特殊文件，特殊文件是为了使I/O设备看起来像文件一般，可以通过和普通文件同样的系统调用进行读写。特殊文件有两种：块特殊文件和字符特殊文件。块特殊文件是指那些课随机存取的块组成的设备，如磁盘；字符特殊文件用于接收或者输出字符流的设备，如打印机、调制解调器。<br>  还有一种与进程和文件相关的特性是管道，是一种虚文件，用于两个进程之间通信。</p><h3 id="保护"><a href="#保护" class="headerlink" title="保护"></a>保护</h3><p>  计算机中含有大量的信息，用户希望对这些信息中游泳而且重要的信息加以保护，管理这些信息的安全信完全依靠操作系统来保证。<br>  UNIX系统中，通过对每个文件赋予一个9位的二进制保护代码。该保护代码有三个位子段，一个用于所有者，一个用于与所有者同组的其他成员，一个用于其他成员。</p><h3 id="shell"><a href="#shell" class="headerlink" title="shell"></a>shell</h3><p>  操作系统是执行系统调用的代码。shell是UNIX系统下的命令提示符，不属于操作系统。</p><h2 id="系统调用"><a href="#系统调用" class="headerlink" title="系统调用"></a>系统调用</h2><p>  操作系统提供了两种功能：为用户提供应用程序的抽象和管理计算机资源。<br>  大部分应用程序和操作系统之间的交互主要是应用程序的抽象。<br>  计算机的资源管理对用户来说基本是透明的。<br>  任何单CPU一次只能执行一条指令<br>  只有系统调用能够进入内核态而过程调用不能进入内核态。</p><h3 id="用于进程管理的系统调用"><a href="#用于进程管理的系统调用" class="headerlink" title="用于进程管理的系统调用"></a>用于进程管理的系统调用</h3><p>  UNIX中，fork是唯一可以在POSIX中创建进程的途径，它创建一个原有进程的副本，包括所有的文件描述符、寄存器等内容，fork过程中，父进程与子进程拥有相同的数据，但是后续对其中任何一个进程的修改不会影响另外一个。<br>  fork调用后会返回一个值，子进程中该值为0，在父进程中等于子进程的进程标识符（PID）。<br>  fork之后，为了等待子进程完成，父进程需要执行waitpid系统调用，父进程会等待任何一个子进程终止。<br>  UNIX中的进程将内存划分成三个部分：texi segment，文本区，例如程序代码；data segment，数据区，例如变量；stack segment，栈区域。数据向上增长而堆栈向下增长。</p><h3 id="用于文件管理的系统调用"><a href="#用于文件管理的系统调用" class="headerlink" title="用于文件管理的系统调用"></a>用于文件管理的系统调用</h3><p>  许多系统调用都与文件系统有关，要读写一个文件，必须先将其打开。这个系统调用通过绝对路径或者指向工作目录的相对路径名指定要打开文件的名称。而代码O_RDONLY、O_WRONLY或O_RDWR的含义分别是只读、只写或者两者都可以，问了创建一个新文件，使用O_CREATE参数，并返回一个文件描述符。</p><h3 id="用于目录的系统调用"><a href="#用于目录的系统调用" class="headerlink" title="用于目录的系统调用"></a>用于目录的系统调用</h3><p>  mkdir和rmdir分别用于创建和删除空目录，link（name1， name2）的作用是允许一个文件以两个或者多个名称出现，多数情况下是在不同目录中使用link；uinx中每个文件都有一个独一无二的版本号，也称作i-number，i-编号，这个编号是i-nodes，i-节点表的索引，link之后两个文件拥有相同的i-编号，也就是这两个文件是同一个文件，但是名字不同。</p><h3 id="其他系统调用"><a href="#其他系统调用" class="headerlink" title="其他系统调用"></a>其他系统调用</h3><p>  chdir：更改当前工作目录<br>  chmod：更改文件权限<br>  kill：用户和用户进程发送信号的方式。如果一个进程准备好捕捉一个特定的信号，那么在信号捕捉之前，会运行一个信号处理程序；如果进程没有准备好捕捉特定的信号，那么信号的到来会杀掉该进程。</p><h2 id="操作系统的结构"><a href="#操作系统的结构" class="headerlink" title="操作系统的结构"></a>操作系统的结构</h2><p>  主要包括单体结构、分层结构、微内核、客户-服务端系统、虚拟机和外核。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;操作系统&quot;&gt;&lt;a href=&quot;#操作系统&quot; class=&quot;headerlink&quot; title=&quot;操作系统&quot;&gt;&lt;/a&gt;操作系统&lt;/h1&gt;&lt;p&gt;  操作系统就是响应用户输入的指令，控制硬件，从而满足用户需求的软件；它的任务就是为用户程序提供一个更好、更简单、更清晰的计算机模型。&lt;/p&gt;</summary>
    
    
    
    <category term="操作系统" scheme="http://xianke5200.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
  </entry>
  
  <entry>
    <title>进程和线程</title>
    <link href="http://xianke5200.github.io/2020/10/27/%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/"/>
    <id>http://xianke5200.github.io/2020/10/27/%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/</id>
    <published>2020-10-27T10:04:30.000Z</published>
    <updated>2020-11-14T14:34:56.838Z</updated>
    
    <content type="html"><![CDATA[<h1 id="进程"><a href="#进程" class="headerlink" title="进程"></a>进程</h1><p>  进程是对正在运行中的程序的一个抽象。<br>  伪并行：严格来说，在某一瞬间，CPU只能运行一个进程，但是CPU会在进程间快速切换，使每个程序运行几十或者几百毫秒，给人一种并行的感觉。</p><a id="more"></a><h2 id="进程模型"><a href="#进程模型" class="headerlink" title="进程模型"></a>进程模型</h2><p>  在进程模型中，所有计算机上运行的软件，通常也包括操作系统，被组织为若干顺序进程，简称为进程。<br>  一个进程就是一个正在执行的程序的实例。<br>  在任何一个给定的瞬间仅有一个进程真正运行。<br>  每一个核也只能一次运行一个进程。<br>  进程是某一类特定活动的总和，它有程序、输入输出以及状态。<br>  单个处理器可以被若干进程共享，它使用某种调度算法决定何时停止一个进程的工作，并转而为另外一个进程提供服务。</p><h2 id="进程的创建"><a href="#进程的创建" class="headerlink" title="进程的创建"></a>进程的创建</h2><p>  系统初始化<br>  正在运行的程序执行了创建进程的系统调用（比如 fork）<br>  用户请求创建一个新进程<br>  初始化一个批处理工作</p><h3 id="系统初始化"><a href="#系统初始化" class="headerlink" title="系统初始化"></a>系统初始化</h3><p>  启动操作系统是，通常会创建若干个进程</p><h3 id="系统调用创建"><a href="#系统调用创建" class="headerlink" title="系统调用创建"></a>系统调用创建</h3><p>  一个正在运行的进程会发出系统调用来创建一个或者多个进程来帮助其完成工作</p><h3 id="用户请求创建"><a href="#用户请求创建" class="headerlink" title="用户请求创建"></a>用户请求创建</h3><p>  在许多交互式系统中，输入一个命令或者双击图标都可以选择开启一个新的进程</p><h3 id="批处理创建"><a href="#批处理创建" class="headerlink" title="批处理创建"></a>批处理创建</h3><p>  在大型批处理系统中，操作系统决定它有资源来运行一个任务时，会创建一个新进程并从其中的输入队列中运行下一个作业。<br>  在unix和windows中，进程创建以后父进程和子进程有各自不同的地址空间。<br>  unix：<br>  不可写的内存区域是共享的<br>  写时复制：父进程和子进程之一想要修改部分内存，则这块内存首先被明确的复制，以确保修改发生在私有区域<br>  可写的内存是不能被共享的<br>  windows：<br>  从一开始父进程和子进程的地址空间就是不同的</p><h2 id="进程的终止"><a href="#进程的终止" class="headerlink" title="进程的终止"></a>进程的终止</h2><p>  正常退出（自愿的）<br>  错误退出（自愿的）<br>  严重错误（非自愿的）<br>  被其他进程杀死（非自愿的）</p><h3 id="正常退出"><a href="#正常退出" class="headerlink" title="正常退出"></a>正常退出</h3><p>  主动调用系统调用终止进程</p><h3 id="错误退出"><a href="#错误退出" class="headerlink" title="错误退出"></a>错误退出</h3><p>  用户执行错误的指令，如编译一个不存在的文件</p><h3 id="严重错误"><a href="#严重错误" class="headerlink" title="严重错误"></a>严重错误</h3><p>  程序发生错误，如执行了非法的指令</p><h3 id="被其他进程杀死"><a href="#被其他进程杀死" class="headerlink" title="被其他进程杀死"></a>被其他进程杀死</h3><p>  某个进程执行了系统调用杀死某进程，kill</p><h2 id="进程的层次结构"><a href="#进程的层次结构" class="headerlink" title="进程的层次结构"></a>进程的层次结构</h2><p>  unix中，进程和它的所有子进程以及子进程的子进程共同组成了一个进程组。同时，进程不能剥夺其子进程的进程权<br>  windows中，没有进程层次的概念，所有进程都是平等的。在创建进程的时候，父进程会得到一个特别的令牌（称为句柄），该句柄可以用来控制子进程，这个令牌也可以移交给别的操作系统个。</p><h2 id="进程的状态"><a href="#进程的状态" class="headerlink" title="进程的状态"></a>进程的状态</h2><p>  一个进程运行时，会经历三个状态：运行态，阻塞态，就绪态。<br>  操作系统最底层的就是调度程序，调度程序决定哪个程序优先被运行和运行多久。</p><h2 id="进程的实现"><a href="#进程的实现" class="headerlink" title="进程的实现"></a>进程的实现</h2><p>  操作系统为了执行进程间的切换，会维护进程表；每个进程占据一个进程表项，该表项包含了进程状态的重要信息，包括程序计数器、堆栈指针、内存分配状态、所打开文件的状态、账号和调度信息，以及其他进程有运行态转换到就绪态或阻塞态所必须保存的信息，从而保证该进程随后能再次启动。</p><h1 id="线程"><a href="#线程" class="headerlink" title="线程"></a>线程</h1><p>  传统操作系统中，每个进程都有一个地址空间和一个控制线程。许多情况下，经常在同一个地址空间中运行多个控制线程的情形。</p><h2 id="线程的使用"><a href="#线程的使用" class="headerlink" title="线程的使用"></a>线程的使用</h2><p>  多线程之间会共享同一块地址空间和所有可用数据的能力，这是进程所不具备的<br>  线程要比进程更轻量级，比进程更容易创建，也更容易撤销。<br>  如果存在大量计算和大量I/O处理，拥有多个线程能在这些活动中彼此重叠进行，从而加快应用程序的执行速度</p><table><thead><tr><th>模型</th><th>特性</th></tr></thead><tbody><tr><td>单线程</td><td>无并行性，性能较差，阻塞系统调用</td></tr><tr><td>多线程</td><td>有并行性，阻塞系统调用</td></tr><tr><td>有限状态机</td><td>并行性，非阻塞系统调用，中断</td></tr></tbody></table><h2 id="经典的线程模型"><a href="#经典的线程模型" class="headerlink" title="经典的线程模型"></a>经典的线程模型</h2><p>  进程拥有一个执行的线程，线程会有程序计数器，用来记录接着要执行哪一条指令；线程还拥有寄存器，用来保存线程当前正在使用的变量；线程还会有堆栈，用来记录程序的执行路径。进程和线程是完完全全不同的两个概念，进程用来把资源集中到一起，而线程则是CPU上调度执行的实体。<br>  同一个进程中，允许线程彼此之间有较大的独立性切互不干扰。<br>  同一个进程中所有线程会有完全一样的地址空间，因此一个线程可以读取、写入甚至擦除另一个线程的堆栈<br>  线程可以处于这几种状态中：运行中、阻塞、就绪和终止<br>  线程之间的状态切换和进程之间的状态切换是一样的<br>  线程系统调用：<br>  thread_create：创建线程<br>  thread_exit： 退出线程<br>  thread_yield： 允许线程放弃CPU从而让另一个线程运行</p><h2 id="POSIX线程"><a href="#POSIX线程" class="headerlink" title="POSIX线程"></a>POSIX线程</h2><p>  POSIX线程（通常称为pthreads）是一种独立于语言而存在的执行模型，以及并行执行模型。它允许程序控制时间上重叠的多个不同的工作流程。每个工作流程都称为一个线程，可以通过调用POSIX Threads API来实现对这些流程的创建和控制。</p><p><img src="/2020/10/27/%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B/1603878170250.table.html" alt="表格"></p><h2 id="线程实现"><a href="#线程实现" class="headerlink" title="线程实现"></a>线程实现</h2><p>  主要三种实现方式：<br>  在用户空间中实现线程<br>  在内核空间中实现线程<br>  在用户和内核空间中混合实现线程</p><h3 id="在用户空间中实现线程"><a href="#在用户空间中实现线程" class="headerlink" title="在用户空间中实现线程"></a>在用户空间中实现线程</h3><p>  整个线程包放在用户空间内，内核对线程一无所知。<br>  运行时系统：也叫运行时环境，该运行时系统提供了程序在其中运行的环境，此环境可能会解决很多问题，包括应用程序内存的布局，程序如何访问变量，在过程之间传递参数的机制，与操作系统的接口等等。<br>  优势：保存线程的状态和调度程序都是本地过程，所以启动他们比进行内核调用效率更高。因而不需要切换到内核，也就不需要上下文切换，也不需要对内存高速缓存尽心刷新，因为线程调度非常便捷，所以效率比较高<br>  允许每个进程有自己的定制的调度算法。<br>  劣势：无法实现阻塞系统调用，所以使用线程一个目标是能够让线程进行阻塞调用，并且要避免呗阻塞的线程影响其他的线程。<br>  计算机并不会把所有程序一次性的放入内存中，如果某个程序发生函数调用或者跳转指令到了一条不在内存的指令，就会发生页面故障，而操作系统将到磁盘上取回这个丢失的指令，这既是缺页故障。<br>  一个线程开始运行时，该线程所在进程中的其他线程都不能运行，除非第一个线程自愿放弃CPU，在一个单进程内部没有时钟中断，所以不可能使用轮转调度的方式调度线程。</p><h3 id="在内核中实现线程"><a href="#在内核中实现线程" class="headerlink" title="在内核中实现线程"></a>在内核中实现线程</h3><p>  不需要运行时环境，每个进程也没有进程表，内核中会有用来记录系统中所有线程的线程表，当某个线程希望创建一个新线程或者撤销一个已有线程时，他会进行一个系统调用，这个系统调用通过对线程表的更新来完成线程的创建或销毁工作。<br>  优势：又有能够阻塞的调用都会通过系统调用的方式来实现，可以采用可循环利用的方式来回收线程，发生缺页故障后，内核很容易就能检查出来是否有其他可运行的线程。<br>  缺点：系统调用开销比较大，而且如果线程的操作（创建、终止）比较多，也会带来很大的开销。</p><h3 id="混合实现"><a href="#混合实现" class="headerlink" title="混合实现"></a>混合实现</h3><p>  内核只识别内核级线程，并对其进行调度，其中一些内核级线程会被多个用户级线程多路复用。</p><h1 id="进程间通信"><a href="#进程间通信" class="headerlink" title="进程间通信"></a>进程间通信</h1><p>  进程需要频繁和其他进程进行交流。进程间进行通讯，必须要使用一种良好的数据结构以至于不能被中断。</p><h2 id="竞态条件"><a href="#竞态条件" class="headerlink" title="竞态条件"></a>竞态条件</h2><p>  在一些操作系统中，协作的进程可能共享一些彼此都能读写的公共资源。两个或多个线程同时对一共享数据进行修改，从而影响程序运行的正确性时，这种就被称为竞态条件。</p><h2 id="临界区"><a href="#临界区" class="headerlink" title="临界区"></a>临界区</h2><p>  不仅共享资源会造成竞态条件，事实上共享文件、共享内存也会在成竞态条件，为了避免这种问题的发生，可以禁止一个或多个进程在同一时刻对共享资源（包括共享内存、共享文件等）进行读写。<br>  我们把对共享内存进行访问的程序片段称作临界区域或临界区。<br>  一个好的解决方案应该包含如下四种条件：<br>      1. 任何时候两个进程不能同时处于临界区<br>      2. 不应对CPU的速度和数量做任何假设<br>      3. 位于临界区外的进程不得阻塞其他进程<br>      4. 不能使任何进程无限等待进入临界区</p><h2 id="忙等互斥"><a href="#忙等互斥" class="headerlink" title="忙等互斥"></a>忙等互斥</h2><h3 id="屏蔽中断"><a href="#屏蔽中断" class="headerlink" title="屏蔽中断"></a>屏蔽中断</h3><p>  每个进程进入临界区后立即屏蔽所有中断，并在离开临界区之前重新启用。<br>  屏蔽中断后，时钟中断也会被屏蔽，只有发生时钟中断或者其他中断是才会进行进程切换，所以屏蔽中断以后，它就可以检查和修改共享内存，而不用担心其他进程介入访问共享数据。<br>  屏蔽中断，进程进入临界区后，用户进程关闭中断，如果经过一段较长时间后进程没有离开，中断就一直启用不了，可能会造成整个系统的终止。而且对于多CPU，屏蔽中断仅对执行了disable指令的CPU有效。</p><h3 id="锁变量"><a href="#锁变量" class="headerlink" title="锁变量"></a>锁变量</h3><p>  考虑有单个共享的锁变量，初始值为0,。当一个线程想进入关键区域时，锁值为0，进程就把它设置为1，并进入关键区域，如果锁值为1，进程就等待直到锁值变为0。<br>  假设一个进程读出锁变量的值并发现它为0，二恰好在它将其设置为1之前，另一个进程调度运行，读出锁的变量为0，并将锁值设置为1，然后第一个线程运行，把锁变量的值再次设置为1，此时临界区会有两个进程同时在运行。</p><h3 id="严格轮询法"><a href="#严格轮询法" class="headerlink" title="严格轮询法"></a>严格轮询法</h3><p>  连续检查一个变量的直到某个值出现为止，这种方法称为忙等待，这种方式很浪费时间，通常应该避免，只有在有理由认为等待时间是非常短的情况下，才能够使用忙等待，用于忙等待的锁，称为自旋锁。</p><h3 id="Peterson-解法"><a href="#Peterson-解法" class="headerlink" title="Peterson 解法"></a>Peterson 解法</h3><p>  在使用共享变量时（即进入其临界区之前），各个进程使用各自的进程号0或1作为参数来调用enter_region，这个函数调用在需要试将使进程等待，直到能够安全的进入临界区，在完成对共享变量的操作之后，进程将嗲用leave_region标识操作完成，并且允许其他进程进入。</p><h3 id="TSL指令"><a href="#TSL指令" class="headerlink" title="TSL指令"></a>TSL指令</h3><p>  TSL RX, LOCK<br>  称为测试并加锁，它将一个内存字lock读到RX中，然后该内存地址上存储一个非零值。在这个指令结束之前，其他处理器均不允许访问内存，执行TSL指令的CPU将会锁住内存总线，用来禁止其他CPU在这个指令结束之前访问内存。</p><h2 id="睡眠与唤醒"><a href="#睡眠与唤醒" class="headerlink" title="睡眠与唤醒"></a>睡眠与唤醒</h2><p>  上述解法本质都是一样的，先检查是否能够进入临界区，若不允许，则该进程将原地等待；进程间的通信原语，这些原语直到允许为止在不允许进程进入关键区域之前会阻塞而不是浪费CPU时间，最简单的是sleep和wakeup。sleep是一个能够造成调用者阻塞的系统调用，也就是说这个系统调用会暂停直到其他进程唤醒它。wakeup调用有一个参数，即要唤醒的进程。</p><h2 id="信号量"><a href="#信号量" class="headerlink" title="信号量"></a>信号量</h2><p>  信号量使用一个整型变量来累计唤醒次数。信号量有两个操作，通常使用down和up。down会检查值是否大于0，大于0，就将其值减1。该值为0.则进程将睡眠。而且down操作会继续进行。检查数值、修改变量值以及以及可能发生的睡眠操作均为一个单一的、不可分割的原子操作完成。这会保证一旦信号量操作开始，没有其他进程能够访问信号量，知道操作完成或者阻塞。<br>  原子性操作指的是在计算机科学的许多其他领域中，一组相关操作全部执行而没有中断或根本不执行。<br>  为了确保信号量能正确工作，需要采用一种不可分割的方式来实现它，up和down作为操作系统调用来实现。而且操作系统只需要在执行以下操作是暂时屏蔽全部中断：检查信号量、更新、必要时使进程睡眠。</p><h2 id="互斥量"><a href="#互斥量" class="headerlink" title="互斥量"></a>互斥量</h2><p>  如果不需要使用信号量的计数能力是，可以使用信号量的一个简单版本，称为mutex（互斥量）。互斥量的优势就在于在一些共享资源和一段代码中保持互斥，互斥量是一个处于两种状态之一的共享变量：解锁和加锁。<br>  如果互斥量已经锁定，调用线程会阻塞直到关键区域内的线程执行完毕并且调用了mutex_unlock。</p><h3 id="Futexes"><a href="#Futexes" class="headerlink" title="Futexes"></a>Futexes</h3><p>  futex是linux中的特性实现了基本的锁定，而且避免了陷入内核中，因为内核的切换开销非常大，这样做可以大大提高性能。futex由两部分组成：内核服务和用户库。内核服务提供了一个等待队列允许多个进程在锁上排队等待，除非内核明确的对他们接触阻塞，否则他们不会运行。</p><h2 id="管程"><a href="#管程" class="headerlink" title="管程"></a>管程</h2><p>  管程是程序、变量和数据结构等组成的一个集合，他们组成一个特殊的模块或者包。进程可以在任何需要的时候调用管程中的程序，但是它们不能从管程外部访问数据结构和程序。<br>  在任何时候，管程只能有一个活跃的进程，这一特性使管程能够很方便的实现互斥操作。<br>  通过临界区自动的互斥，管程比信号量更容易保证并行编程的正确性。但是管程也有缺点，管程是一个编程语言的概念，编译器必须要识别管程并用某种方式对其互斥作出保证。</p><h2 id="消息传递"><a href="#消息传递" class="headerlink" title="消息传递"></a>消息传递</h2><p>  这种进程间通信的方法使用两个原语send和receive，他们像信号量而不像管程，是系统调用而不是语言级别。</p><h3 id="消息传递系统的设计要点"><a href="#消息传递系统的设计要点" class="headerlink" title="消息传递系统的设计要点"></a>消息传递系统的设计要点</h3><p>  为了防止消息丢失，发送方和接收方可以达成一致：一旦接收到消息后，接收方马上会送一条特殊的确认消息，如果发送方在一段时间间隔内未收到确认，则重发消息。<br>  消息系统还必须处理如何命名进程的问题，以便发送或接收调用中清晰的指明进程。身份验证也是一个问题，比如客户端怎么知道它是在与一个真正的文件服务器通信，从发送方到接收方的信息有可能被中间人锁篡改。<br>  对消息进行编址：<br>      1. 为每个进程分配一个唯一的地址，让消息按进程的地址编址<br>      2. 引入一个新的数据结构，称为信箱，信箱是一个用来对一定的数据进行缓冲的数据结构，信箱中的消息的设置方法也有很多种，典型的方法是在信箱创建是确定消息的数量。在使用信箱时，在send和receive调用的地址参数就是信箱的地址，而不是进程的地址。当一个进程试图向一个满的信箱发送消息时，它将被挂起，知道信箱中有消息被取走，从而为新的消息腾出地址空间。</p><h2 id="屏障"><a href="#屏障" class="headerlink" title="屏障"></a>屏障</h2><p>  在某些应用中划分了若干阶段，并且规定，除非所有的进程都就绪准备着手下一个阶段，否则任何进程都不能进入下一个阶段，可以通过每个阶段的结尾安装一个屏障来实现这种行为。，当一个进程到达屏障时，它会被屏障所拦截，知道所有的屏障都到达为止；屏障可用于一组进程同步。</p><h2 id="避免锁：读-复制-更新"><a href="#避免锁：读-复制-更新" class="headerlink" title="避免锁：读-复制-更新"></a>避免锁：读-复制-更新</h2><p>  将更新过程中的移除和在分配过程分离开。</p><h2 id="调度"><a href="#调度" class="headerlink" title="调度"></a>调度</h2><p>  当两个或两个以上的进程/线程处于就绪状态是，调度程序采用调度算法选择接下来哪个进程/线程可以运行。</p><h3 id="调度介绍"><a href="#调度介绍" class="headerlink" title="调度介绍"></a>调度介绍</h3><p>  一些大型机仍然将批处理和分时服务结合使用，需要调度程序决定下一个运行的是一个批处理作业还是终端上的用户，好的调度程序可以在提高性能和用户的满意度方面取得很大的成果。</p><h4 id="进程行为"><a href="#进程行为" class="headerlink" title="进程行为"></a>进程行为</h4><p>  几乎所有的进程（磁盘和网络）I/O请求和计算都是交替运行的。<br>  在计算上花费的时间更长，一次运行会占用大量时间，I/O切换发生的频率比较少的称为计算密集型<br>  一次运行花费的时间比较短，I/O切换发生的频率比加快的称为I/O密集型</p><h4 id="何时调度"><a href="#何时调度" class="headerlink" title="何时调度"></a>何时调度</h4><p>  创建一个新进程后，调度程序可以任意选择子进程或者父进程开始运行<br>  在进程退出时需要作出调度决定<br>  空闲进程是操作系统自带的系统进程，该进程是在各个处理器上运行的单个进程，它唯一的任务是在系统没有处理其他线程时占用处理器时间。空闲进程并不是一个真正的进程，它是核心虚拟出来的，多任务系统中都存在。<br>  当进程阻塞在I/O、信号量或其他原因时，必须选择另外一个进程来运行。<br>  当I/O中断发生时，可以做出调度决策。</p><h4 id="调度算法的分类"><a href="#调度算法的分类" class="headerlink" title="调度算法的分类"></a>调度算法的分类</h4><p>  批处理系统：一般会选择使用非抢占式算法或者周期性比较长的抢占式算法。<br>  交互式用户环境：为了避免一个进程霸占CPU拒绝为其他进程服务，所以需要抢占式算法。<br>  实时系统：抢占有时是不需要的，因为进程运行不了很长时间，通常很快的做完自己的工作并阻塞。</p><h4 id="调度算法的目标"><a href="#调度算法的目标" class="headerlink" title="调度算法的目标"></a>调度算法的目标</h4><p>  所有系统：<br>      公平：给每个进程公平的CPU份额<br>    策略强制执行：保证规定的策略被执行<br>    平衡：保持系统的所有部分都忙碌<br>  批处理系统：<br>      吞吐量：每小时最大作业数<br>    周转时间：从提交到终止间的最小时间<br>    CPU利用率：保持CPU时钟忙碌<br>  交互式系统：<br>    响应时间：快速响应请求<br>    均衡性：满足用户的期望<br>  实时系统：<br>    满足截止时间：避免时间丢失<br>    可预测性：多媒体系统中避免品质降低</p><h4 id="批处理中的调度"><a href="#批处理中的调度" class="headerlink" title="批处理中的调度"></a>批处理中的调度</h4><p>  先来先服务<br>  最短作业优先<br>  最短剩余时间优先</p><h4 id="交互式系统中的调度"><a href="#交互式系统中的调度" class="headerlink" title="交互式系统中的调度"></a>交互式系统中的调度</h4><p>  轮询调度：将上下问切换时间设置太短会导致过多的进程切换并降低CPU效率，但设置时间太长会导致一个短请求很长时间得不到响应；最好的切换时间是在20-50ms之间设置。<br>  优先级调度<br>  多级队列<br>  最短进程优先<br>  保证调度<br>  彩票调度<br>  公平分享调度</p><h4 id="实时系统中的调度"><a href="#实时系统中的调度" class="headerlink" title="实时系统中的调度"></a>实时系统中的调度</h4><p>  实时系统可以分为两类：硬实时和软实时；前者意味着必须要满足绝对的截止时间，后者的含义是虽然不希望偶尔错失截止时间，但是可以容忍。<br>  实时系统中的事件可以按照响应方式进一步分类为周期性（以规则的时间间隔发生）是件或非周期性（发生时间不可预知）事件。</p><h4 id="调度策略和机制"><a href="#调度策略和机制" class="headerlink" title="调度策略和机制"></a>调度策略和机制</h4><p>  以上讨论的调度算法中没有一个算法从用户进程接收有关的调度决策信息，导致调度程序很少能够做出最优的选择<br>  解决问题的办法是将调度机制和调度策略分开，这就意味着调度算法在某种方式下被参数化，参数可以被用户进程填写。<br>  调度机制位于内核，而调度策略由用户决定，调度策略和机制分离是一种关键性思路。</p><h4 id="线程调度"><a href="#线程调度" class="headerlink" title="线程调度"></a>线程调度</h4><p>  当若干进程都有多个线程时，就存在两个层次的并行：进程和线程。在这样的系统中调度处理有本质的差别，这取决于所支持的是用户级线程还是内核级线程（或者两者都支持）。<br>  用户级线程：运行时系统可以使用上面介绍的任意一种算法。轮转调度和优先级调度更为常用，唯一的局限是，缺乏一个时钟中断运行过长的线程。<br>  内核级线程：内核级线程和用户级线程之间主要的差别在于性能，用户级线程的切换需要少量的机器指令，而内核线程需要完整的上下文切换，修改内存映像，使高速缓存失效，这会导致若干数量级的延迟。</p><p>  <a href="https://mp.weixin.qq.com/s?__biz=MzU2NDg0OTgyMA==&mid=2247484788&idx=1&sn=8a17224cabe09d3bd564dfdf22e2ff5d&chksm=fc45f887cb3271914f0e688a3cce4d7e3ce9077cdde199648e72aa92ad08fba2047b4483b7e8&token=504034995&lang=zh_CN%23rd">程序员需要了解的硬核知识之汇编语言（全）</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;进程&quot;&gt;&lt;a href=&quot;#进程&quot; class=&quot;headerlink&quot; title=&quot;进程&quot;&gt;&lt;/a&gt;进程&lt;/h1&gt;&lt;p&gt;  进程是对正在运行中的程序的一个抽象。&lt;br&gt;  伪并行：严格来说，在某一瞬间，CPU只能运行一个进程，但是CPU会在进程间快速切换，使每个程序运行几十或者几百毫秒，给人一种并行的感觉。&lt;/p&gt;</summary>
    
    
    
    <category term="操作系统" scheme="http://xianke5200.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
  </entry>
  
  <entry>
    <title>基金投资复盘</title>
    <link href="http://xianke5200.github.io/2020/10/22/%E5%9F%BA%E9%87%91%E6%8A%95%E8%B5%84%E5%A4%8D%E7%9B%98/"/>
    <id>http://xianke5200.github.io/2020/10/22/%E5%9F%BA%E9%87%91%E6%8A%95%E8%B5%84%E5%A4%8D%E7%9B%98/</id>
    <published>2020-10-22T03:56:30.000Z</published>
    <updated>2020-10-22T13:15:17.605Z</updated>
    
    <content type="html"><![CDATA[<p>  从17年毕业后开始投资基金理财，到现在有三年时间了，刚开始只是小额买入，纯粹是抱着玩一玩的态度，反正金额比较小，亏损一点也不会心疼，顺带可以增长自己的理财经验；在今年开始买入基金额差不多有10多万。在这期间，最大亏损有2000多，最高盈利9000多；所以今天在这对这段时间的及投资基金进行复盘。<br> <a id="more"></a></p><h1 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h1><h2 id="基金操作"><a href="#基金操作" class="headerlink" title="基金操作"></a>基金操作</h2><p>  今年第一次买入基金是在今年三月份左右，当时买入正好在左侧半山腰附近，正处于基金上涨阶段，算是一波上涨行情，持续了大概一两个星期，收益大概也有20%左右，也算小赚了一笔，每天看着基金收益有几百块，内心的贪婪不断放大，没有及时止盈，然后就碰到美股黑天鹅，出现了第一次熔断，当时看到熔断内心反而有些激动，觉得机会来了，毕竟熔断这事几十年才会出现一次，出现这一次熔断后面应该就会迎来一波上涨行情，正是买入的好时机，陆陆续续又买入了不少，然后后面又接着出现了几次美股熔断，账面上的资金不断减少，最后亏损本金2000多，在这期间，亏损不断增多，内心的恐惧不断上升，不知道还会亏损多久，于是选择卖出止损，将之前买入的基金卖出大部分。<br>  随着后面美国量化宽松政策的颁布，大量美金流入股市，带动股市上涨，前期卖出的那部分基金，大多都回到了卖出之前的高峰，甚至创造新高，由此可见，之前的卖出止损操作，算是一次错误操作。如果当时坚持拿住不选择止损，后面的收益应该不差，应该可以达到总资金10%的收益。<br>  在这期间，在支付宝上面关注了薇薇庄主，第一次听到了周期的概念，以苹果价格来衡量基金所处的周期位置，成为一把买入卖出的标尺；开始跟着庄主进行基金的操作，前前后后买入10000多，因为当时第一次接触这种推荐基金操作的情况，但是心里并不是特别相信，纯粹是抱着试一试的态度跟着买入，所以并没有买入太多，后面随着了解的加深，基金收益的不断提高，想要继续买入时已经错过了买入的时机。后面这种上涨的情况一直持续到七月份，买入收益率也达到了30%多，大盘指数达到3200多点，觉得股市这一波上涨快要结束，所以选择全部卖出止盈，在卖出后一个星期，股市迎来了一次短时间的下跌，最后在3200到3400之间震荡，一直持续到现在，此时已经基本空仓，股市也算是在一个高点，不适合继续操作，选择继续观望。当时卖出全部买入基金，肯定损失了一部分收益，这一点倒是没有觉得有什么可惜，一个人不可能赚到所有的钱，在收益率达到预期之后选择止盈应该算是一次正确的操作。但是股市并没有像事先预料的出现较大下跌，所以也失去了后续继续进场买入的机会。</p><h2 id="黄金"><a href="#黄金" class="headerlink" title="黄金"></a>黄金</h2><p>  黄金第一次买入是在3、4月份的时候，但是黄金正经历过一次大的下跌，但是买入的不多，由于当时对黄金的行情走势，没有一个确定的判断，所以不敢一下买入太多，原本是准备等下跌就陆陆续续买入，来不断增加手里的低价筹码，然后再第一次买入后，黄金就迎来了一波打的涨幅，算是打乱了之前定好的策略；原本是不准备继续买入黄金，准备等到黄金再一次下跌的时候再继续买入。这期间关注薇薇庄主已经有一段时间了，对庄主策略的信任度也有了一定的增长。在第一次买入后不久庄主就发了黄金相关的买入消息，所以就又再次做了一笔算是大额买入的操作，在这次买入过后，黄金一直处于上涨的趋势，等到九月份左右，黄金国际价格达到1900将近2000的时候，整体黄金的收益率达到了20%，黄金迎来了第一波比较大的下跌，由于黄金之前一直处于一种上升的趋势，出于对黄金走势的盲目自信，以及内心的贪婪，在这一次下跌过程中，又进行了两次大额买入操作，然而在之后，黄金迎来了更大的下跌，之前的收益全部亏损，截止目前黄金在1850-2000之前振荡，黄金亏损本金2%左右，目前黄金账户已关闭，不再操作。<br>  这次黄金操作属于典型的追涨买入，后续买入操作要引以为戒。</p><h1 id="策略"><a href="#策略" class="headerlink" title="策略"></a>策略</h1><p>  1.追涨要慎重，对后续上涨趋势没有70%的把握，绝不追涨<br>  2.买在山顶，属于右侧操作，不能慌，拿住，资金充足情况下，逢跌可酌情买入加仓，降低手中筹码的价格，等待上涨；每次下跌买入一层仓的10%。</p><h1 id="后续操作"><a href="#后续操作" class="headerlink" title="后续操作"></a>后续操作</h1><p>  10月份时，手上还有6只基金，每只基金买入200底仓，准备逢跌加仓，当基金价格低于这次买入的价格的时候，继续买入加仓，高于此次买入价格就不加仓，跌幅超过一个点就买入200，超过2个点就买入400，以此类推。<br>后续每个月中旬对上一个月做一次复盘。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;  从17年毕业后开始投资基金理财，到现在有三年时间了，刚开始只是小额买入，纯粹是抱着玩一玩的态度，反正金额比较小，亏损一点也不会心疼，顺带可以增长自己的理财经验；在今年开始买入基金额差不多有10多万。在这期间，最大亏损有2000多，最高盈利9000多；所以今天在这对这段时间的及投资基金进行复盘。&lt;br&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="基金投资" scheme="http://xianke5200.github.io/categories/%E5%9F%BA%E9%87%91%E6%8A%95%E8%B5%84/"/>
    
    
    <category term="复盘" scheme="http://xianke5200.github.io/tags/%E5%A4%8D%E7%9B%98/"/>
    
  </entry>
  
  <entry>
    <title>hexo无法外网访问</title>
    <link href="http://xianke5200.github.io/2020/10/17/hexo%E6%97%A0%E6%B3%95%E5%A4%96%E7%BD%91%E8%AE%BF%E9%97%AE/"/>
    <id>http://xianke5200.github.io/2020/10/17/hexo%E6%97%A0%E6%B3%95%E5%A4%96%E7%BD%91%E8%AE%BF%E9%97%AE/</id>
    <published>2020-10-17T08:38:13.000Z</published>
    <updated>2020-10-21T11:27:54.745Z</updated>
    
    <content type="html"><![CDATA[<p> 当把通过hexo搭建好的博客部署到github后，应该都希望，可以能够通过外网访问自己的博客，<a id="more"></a>可以很方便的和别人分享自己的成果，同时也可以很好的记录以及自己需要的时候查阅。<br> 在部署好自己博客后，可能会出现无法访问拉ing中情况</p><h1 id="无法访问"><a href="#无法访问" class="headerlink" title="无法访问"></a>无法访问</h1><p> 这种情况可能是由于电信运营商屏蔽的缘故，导致外网无法访问，可以通过修改本地hosts文件来解决该问题，该文件路径（C:\Windows\System32\drivers\etc\）,然后再ipip.net网站查询自己博客网站的ip地址，最后在hosts文件中按示例添加自己网站的ip地址以及网站链接，类似如下：<br><img src="/2020/10/17/hexo%E6%97%A0%E6%B3%95%E5%A4%96%E7%BD%91%E8%AE%BF%E9%97%AE/20201017_01.png" alt="20201017_01"></p><h1 id="出现404警告"><a href="#出现404警告" class="headerlink" title="出现404警告"></a>出现404警告</h1><p> 出现这种情况有可能是，Github Pages没有启用的缘故，可以在库上项目设置中启用该项即可<br> 如下图：<br><img src="/2020/10/17/hexo%E6%97%A0%E6%B3%95%E5%A4%96%E7%BD%91%E8%AE%BF%E9%97%AE/20201017_02.png" alt="20201017_02"><br><img src="/2020/10/17/hexo%E6%97%A0%E6%B3%95%E5%A4%96%E7%BD%91%E8%AE%BF%E9%97%AE/20201017_03.png" alt="20201017_03"><br> 按图中启用自己同步到库上的代码分支即可正常访问。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt; 当把通过hexo搭建好的博客部署到github后，应该都希望，可以能够通过外网访问自己的博客，&lt;/p&gt;</summary>
    
    
    
    <category term="hexo" scheme="http://xianke5200.github.io/categories/hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://xianke5200.github.io/2020/10/14/hello-world/"/>
    <id>http://xianke5200.github.io/2020/10/14/hello-world/</id>
    <published>2020-10-14T12:25:26.136Z</published>
    <updated>2020-10-17T08:40:16.921Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <summary type="html">Welcome to Hexo</summary>
    
    
    
    <category term="hexo" scheme="http://xianke5200.github.io/categories/hexo/"/>
    
    
    <category term="hexo" scheme="http://xianke5200.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Python用PIL获取图片信息</title>
    <link href="http://xianke5200.github.io/2020/08/11/Python%E7%94%A8PIL%E8%8E%B7%E5%8F%96%E5%9B%BE%E7%89%87%E4%BF%A1%E6%81%AF/"/>
    <id>http://xianke5200.github.io/2020/08/11/Python%E7%94%A8PIL%E8%8E%B7%E5%8F%96%E5%9B%BE%E7%89%87%E4%BF%A1%E6%81%AF/</id>
    <published>2020-08-11T08:04:37.000Z</published>
    <updated>2020-10-16T12:55:46.517Z</updated>
    
    <content type="html"><![CDATA[<p>我们利用处理PNG图片是，可能需要获取基本的图片信息来做一些基本的处理，话不多说，上代码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">img = Image.open(<span class="string">&quot;more.png&quot;</span>)</span><br><span class="line"><span class="comment"># img.show()</span></span><br><span class="line"></span><br><span class="line">print(img.size)<span class="comment">#获取图片大小（width， height）</span></span><br><span class="line">print(img.size[<span class="number">0</span>], img.size[<span class="number">1</span>]) <span class="comment">#（width， height）</span></span><br><span class="line">print(img.mode)<span class="comment">#获取图片模式&#123;&#x27;1&#x27;:1, &#x27;L&#x27;:8, &#x27;P&#x27;:8(带颜色表), &#x27;RGB&#x27;:24, &#x27;RGBA&#x27;:32,&#125;</span></span><br><span class="line">print(img.info) <span class="comment">#打印的信息类似下方注释，当然必须图片内部包含该信息才行</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">&#x27;Software&#x27;: &#x27;Adobe ImageReady&#x27;, </span></span><br><span class="line"><span class="string">&#x27;XML:com.adobe.xmp&#x27;: &#x27;&lt;?xpacket begin=&quot;\ufeff&quot; id=&quot;W5M0MpCehiHzreSzNTczkc9d&quot;?&gt; </span></span><br><span class="line"><span class="string">&lt;x:xmpmeta </span></span><br><span class="line"><span class="string"> xmlns:x=&quot;adobe:ns:meta/&quot; </span></span><br><span class="line"><span class="string"> x:xmptk=&quot;Adobe XMP Core 5.6-c140 79.160451, 2017/05/06-01:08:21        &quot;&gt; </span></span><br><span class="line"><span class="string">&lt;rdf:RDF xmlns:rdf=&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;&gt;</span></span><br><span class="line"><span class="string"> &lt;rdf:Description rdf:about=&quot;&quot; xmlns:xmp=&quot;http://ns.adobe.com/xap/1.0/&quot; </span></span><br><span class="line"><span class="string"> xmlns:xmpMM=&quot;http://ns.adobe.com/xap/1.0/mm/&quot; </span></span><br><span class="line"><span class="string"> xmlns:stRef=&quot;http://ns.adobe.com/xap/1.0/sType/ResourceRef#&quot; </span></span><br><span class="line"><span class="string"> xmp:CreatorTool=&quot;Adobe Photoshop CC 2018 (Macintosh)&quot; xmpMM:InstanceID=&quot;xmp.iid:AE0F209DE45311E998F5EA8083EEF15A&quot; </span></span><br><span class="line"><span class="string"> xmpMM:DocumentID=&quot;xmp.did:AE0F209EE45311E998F5EA8083EEF15A&quot;&gt; </span></span><br><span class="line"><span class="string"> &lt;xmpMM:DerivedFrom stRef:instanceID=&quot;xmp.iid:AE0F209BE45311E998F5EA8083EEF15A&quot; </span></span><br><span class="line"><span class="string"> stRef:documentID=&quot;xmp.did:AE0F209CE45311E998F5EA8083EEF15A&quot;/&gt; </span></span><br><span class="line"><span class="string"> &lt;/rdf:Description&gt; &lt;/rdf:RDF&gt; &lt;/x:xmpmeta&gt; &lt;?xpacket end=&quot;r&quot;?&gt;&#x27;</span></span><br><span class="line"><span class="string"> &#125;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">sequ = img.getdata()</span><br><span class="line">sequ0 = list(sequ)</span><br><span class="line">print(sequ0)<span class="comment">#获取图片像素值</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> img.mode == <span class="string">&#x27;P&#x27;</span>:</span><br><span class="line">    print(img.palette.palette)<span class="comment">#打印颜色表</span></span><br><span class="line">    <span class="comment"># lut = img.resize((99, 99))</span></span><br><span class="line">    <span class="comment"># lut.putdata(range(256))</span></span><br><span class="line">    lut = lut.convert(<span class="string">&quot;RGB&quot;</span>)<span class="comment">#将图片转换为RGB图像</span></span><br><span class="line">    print(list(lut.getdata()))<span class="comment">#打印图像RGB像素值</span></span><br><span class="line">    <span class="comment"># pix = lut.load()</span></span><br><span class="line">    <span class="comment"># print(pix[1, 0])</span></span><br><span class="line">    <span class="comment"># lut.show()</span></span><br><span class="line">    <span class="comment"># lut now contains a sequence of (r, g, b) tuples</span></span><br><span class="line"></span><br><span class="line">pix = img.load()</span><br><span class="line">print(pix[img.size[<span class="number">0</span>]/<span class="number">2</span>, img.size[<span class="number">1</span>]/<span class="number">2</span>])<span class="comment">#某个点（x, y）的像素值</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> img.mode == <span class="string">&#x27;RGBA&#x27;</span>:</span><br><span class="line">r,g,b, a = img.split()</span><br><span class="line">print(r.mode)</span><br><span class="line">print(r.size)</span><br><span class="line">print(img.size)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">我们利用处理PNG图片是，可能需要获取基本的图片信息来做</summary>
    
    
    
    <category term="GUI" scheme="http://xianke5200.github.io/categories/GUI/"/>
    
    
    <category term="python" scheme="http://xianke5200.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python爬取哔哩哔哩视频的相关信息后续</title>
    <link href="http://xianke5200.github.io/2020/08/03/Python%E7%88%AC%E5%8F%96%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9%E8%A7%86%E9%A2%91%E7%9A%84%E7%9B%B8%E5%85%B3%E4%BF%A1%E6%81%AF%E5%90%8E%E7%BB%AD/"/>
    <id>http://xianke5200.github.io/2020/08/03/Python%E7%88%AC%E5%8F%96%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9%E8%A7%86%E9%A2%91%E7%9A%84%E7%9B%B8%E5%85%B3%E4%BF%A1%E6%81%AF%E5%90%8E%E7%BB%AD/</id>
    <published>2020-08-03T11:50:28.000Z</published>
    <updated>2020-10-16T12:32:19.701Z</updated>
    
    <content type="html"><![CDATA[<p>上一篇文章通过selenium工具自动搜索爬取哔哩哔哩上面的视频相关信息，今天我们接着上一篇文章，保存视频的图片到本地。<br>首先找到要爬取的网页数据所在的位置，如下图<br><img src="https://img-blog.csdnimg.cn/20200803192657446.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NpbmF0XzMzMzIzNTQ0,size_16,color_FFFFFF,t_70" alt="爬取的图片标签信息以及网址"><br>并且，右键点击该网址，可以选择在新标签页中打开，在新标签页中，除了显示图片不会显示其他东西。如下<img src="https://img-blog.csdnimg.cn/20200803193319709.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NpbmF0XzMzMzIzNTQ0,size_16,color_FFFFFF,t_70" alt="图片数据"><br>到这就是原本的图片数据了，如果跳转过后依然不是这样，就需要继续往下寻找到最终的图片数据地址。<br>在上一篇文章的基础上就添加了一个保存图片的函数，上代码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">img_save</span>(<span class="params">soup</span>):</span></span><br><span class="line">    img_url_list = soup.find(class_=<span class="string">&#x27;video-list clearfix&#x27;</span>).find_all_next(class_=<span class="string">&#x27;img-anchor&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200803194021234.png" alt="在这里插入图片描述"><br>查找包含图片连接的标签，得到如上所示片段</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">index = <span class="number">0</span></span><br><span class="line">  <span class="keyword">for</span> url <span class="keyword">in</span> img_url_list:</span><br><span class="line">      img_url = url.find(<span class="string">&#x27;img&#x27;</span>).get(<span class="string">&#x27;src&#x27;</span>)</span><br><span class="line">      print(img_url)</span><br></pre></td></tr></table></figure><pre><code>//i2.hdslb.com/bfs/archive/176fdf5ba89c5eff3c0f300aaf53967dcddff923.jpg@320w_200h.webp</code></pre><p>获取图片链接地址，得到如上文本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> img_url != <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">          img_request = (<span class="string">&#x27;https:&#x27;</span>+ img_url).replace(<span class="string">&#x27;webp&#x27;</span>, <span class="string">&#x27;jpg&#x27;</span>)</span><br><span class="line">          print(img_request)</span><br><span class="line">          img_resp = requests.get(img_request)</span><br></pre></td></tr></table></figure><pre><code>https://i2.hdslb.com/bfs/archive/176fdf5ba89c5eff3c0f300aaf53967dcddff923.jpg@320w_200h.jpg</code></pre><p>将得到的网址进行拼接，并替换最后的‘webp’为‘jpg’，如果不修改直接保存到本地，图片会无法正常显示</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="string">&quot;cxk_video_img&quot;</span>):</span><br><span class="line">            os.mkdir(<span class="string">&#x27;cxk_video_img&#x27;</span>)</span><br><span class="line">        <span class="keyword">with</span> open(<span class="string">&#x27;cxk_video_img/%d.jpg&#x27;</span> %index, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(img_resp.content)</span><br><span class="line">    index += <span class="number">1</span></span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>最后就是新建文件夹，保存图片到文件夹中。<br>但是有一个问题，就是有的图片网址获取到的为空，不知道是否和网速也有关系，还是代码本身部分还有我没有发现的欠缺，欢迎各位大佬指正。<br>完整代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.common.exceptions <span class="keyword">import</span> TimeoutException</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.ui <span class="keyword">import</span> WebDriverWait</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support <span class="keyword">import</span> expected_conditions <span class="keyword">as</span> EC</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.keys <span class="keyword">import</span> Keys</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> xlwt</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">browser = webdriver.Chrome()</span><br><span class="line"><span class="comment">#browser = webdriver.PhantomJS()</span></span><br><span class="line">WAIT = WebDriverWait(browser, <span class="number">20</span>)</span><br><span class="line">browser.set_window_size(<span class="number">1400</span>, <span class="number">900</span>)</span><br><span class="line"></span><br><span class="line">book = xlwt.Workbook(encoding=<span class="string">&#x27;utf-8&#x27;</span>, style_compression=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">sheet = book.add_sheet(<span class="string">&#x27;蔡徐坤篮球&#x27;</span>, cell_overwrite_ok=<span class="literal">True</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">0</span>, <span class="string">&#x27;名称&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">1</span>, <span class="string">&#x27;地址&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">2</span>, <span class="string">&#x27;描述&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">3</span>, <span class="string">&#x27;观看次数&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">4</span>, <span class="string">&#x27;弹幕数&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">5</span>, <span class="string">&#x27;发布时间&#x27;</span>)</span><br><span class="line"></span><br><span class="line">n = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">search</span>():</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        print(<span class="string">&#x27;开始访问b站....&#x27;</span>)</span><br><span class="line">        browser.get(<span class="string">&quot;https://www.bilibili.com/&quot;</span>)</span><br><span class="line"></span><br><span class="line">        search = browser.find_element_by_xpath(<span class="string">&#x27;//div[@class=&quot;nav-search&quot;]/form/input&#x27;</span>)</span><br><span class="line">        search.send_keys(<span class="string">&quot;蔡徐坤 篮球&quot;</span>)</span><br><span class="line">        search.send_keys(Keys.ENTER)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 跳转到新的窗口</span></span><br><span class="line">        print(<span class="string">&#x27;跳转到新窗口&#x27;</span>)</span><br><span class="line">        all_h = browser.window_handles</span><br><span class="line">        browser.switch_to.window(all_h[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">        <span class="comment"># html = browser.page_source</span></span><br><span class="line">        <span class="comment"># # print(html)</span></span><br><span class="line">        <span class="comment"># soup = BeautifulSoup(html, &#x27;html.parser&#x27;)</span></span><br><span class="line">        <span class="comment"># save_to_excel(soup)</span></span><br><span class="line">        <span class="comment"># total_index = soup.find(class_=&#x27;page-item last&#x27;).find(class_=&#x27;pagination-btn&#x27;)</span></span><br><span class="line"></span><br><span class="line">        get_source()</span><br><span class="line">        total_index = WAIT.until(EC.presence_of_element_located((By.CSS_SELECTOR,</span><br><span class="line">                                                                 <span class="string">&quot;li.page-item.last &gt; button&quot;</span>)))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># pattern = re.compile(&#x27;&lt;div class=&quot;page-wrap&quot;&gt;.*?&lt;li class=&quot;page-item last&quot;&gt;.*?(\d+).*?&lt;/div&gt;&#x27;, re.S)</span></span><br><span class="line">        <span class="comment"># total_index = int(re.findall(pattern, html)[0])</span></span><br><span class="line">        <span class="keyword">return</span> int(total_index.text)</span><br><span class="line">    <span class="keyword">except</span> TimeoutException:</span><br><span class="line">        <span class="keyword">return</span> search()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">next_page</span>(<span class="params">page_num</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        print(<span class="string">&#x27;获取第(%d)页数据&#x27;</span> % page_num)</span><br><span class="line">        next_btn = WAIT.until(EC.element_to_be_clickable((By.CSS_SELECTOR,</span><br><span class="line">                                                          <span class="string">&#x27;li.page-item.next &gt; button&#x27;</span>)))</span><br><span class="line">        next_btn.click()</span><br><span class="line">        get_source()</span><br><span class="line">    <span class="keyword">except</span> TimeoutException:</span><br><span class="line">        browser.refresh()</span><br><span class="line">        <span class="keyword">return</span> next_page(page_num)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_to_excel</span>(<span class="params">soup</span>):</span></span><br><span class="line">    list = soup.find(class_=<span class="string">&#x27;video-list clearfix&#x27;</span>).find_all_next(class_=<span class="string">&#x27;info&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> list:</span><br><span class="line">        item_title = item.find(<span class="string">&#x27;a&#x27;</span>).get(<span class="string">&#x27;title&#x27;</span>)</span><br><span class="line">        item_link = item.find(<span class="string">&#x27;a&#x27;</span>).get(<span class="string">&#x27;href&#x27;</span>)</span><br><span class="line">        item_dec = item.find(class_=<span class="string">&#x27;des hide&#x27;</span>).text</span><br><span class="line">        item_view = item.find(class_=<span class="string">&#x27;so-icon watch-num&#x27;</span>).text</span><br><span class="line">        item_biubiu = item.find(class_=<span class="string">&#x27;so-icon hide&#x27;</span>).text</span><br><span class="line">        item_date = item.find(class_=<span class="string">&#x27;so-icon time&#x27;</span>).text</span><br><span class="line"></span><br><span class="line">        print(<span class="string">&#x27;爬取：&#x27;</span> + item_title)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">global</span> n</span><br><span class="line"></span><br><span class="line">        sheet.write(n, <span class="number">0</span>, item_title)</span><br><span class="line">        sheet.write(n, <span class="number">1</span>, item_link)</span><br><span class="line">        sheet.write(n, <span class="number">2</span>, item_dec)</span><br><span class="line">        sheet.write(n, <span class="number">3</span>, item_view)</span><br><span class="line">        sheet.write(n, <span class="number">4</span>, item_biubiu)</span><br><span class="line">        sheet.write(n, <span class="number">5</span>, item_date)</span><br><span class="line"></span><br><span class="line">        n = n + <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">img_save</span>(<span class="params">soup</span>):</span></span><br><span class="line">    img_url_list = soup.find(class_=<span class="string">&#x27;video-list clearfix&#x27;</span>).find_all_next(class_=<span class="string">&#x27;img-anchor&#x27;</span>)</span><br><span class="line">    index = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> url <span class="keyword">in</span> img_url_list:</span><br><span class="line">        img_url = url.find(<span class="string">&#x27;img&#x27;</span>).get(<span class="string">&#x27;src&#x27;</span>)</span><br><span class="line">        print(img_url)</span><br><span class="line">        <span class="keyword">if</span> img_url != <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">            img_request = (<span class="string">&#x27;https:&#x27;</span>+ img_url).replace(<span class="string">&#x27;webp&#x27;</span>, <span class="string">&#x27;jpg&#x27;</span>)</span><br><span class="line">            print(img_request)</span><br><span class="line">            img_resp = requests.get(img_request)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="string">&quot;cxk_video_img&quot;</span>):</span><br><span class="line">                os.mkdir(<span class="string">&#x27;cxk_video_img&#x27;</span>)</span><br><span class="line">            <span class="keyword">with</span> open(<span class="string">&#x27;cxk_video_img/%d.jpg&#x27;</span> %index, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                f.write(img_resp.content)</span><br><span class="line">        index += <span class="number">1</span></span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_source</span>():</span></span><br><span class="line">    WAIT.until(EC.presence_of_element_located(</span><br><span class="line">        (By.CSS_SELECTOR, <span class="string">&#x27;ul.video-list.clearfix&#x27;</span>)))</span><br><span class="line">    <span class="comment"># browser.refresh()</span></span><br><span class="line">    html = browser.page_source</span><br><span class="line">    <span class="comment"># print(html)</span></span><br><span class="line">    soup = BeautifulSoup(html, <span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line">    save_to_excel(soup)</span><br><span class="line">    img_save(soup)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        total = search()</span><br><span class="line">        <span class="comment"># print(total)</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>, int(total)+<span class="number">1</span>):</span><br><span class="line">            next_page(i)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        browser.close()</span><br><span class="line">        browser.quit()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br><span class="line">    book.save(<span class="string">u&#x27;蔡徐坤篮球.xls&#x27;</span>)</span><br></pre></td></tr></table></figure><p>本来还想爬取保存视频到本地，结果没法得到视频的最终地址，所以只能暂且搁置，保存视频到本地，也可以采用保存图片相类似的方式。</p>]]></content>
    
    
    <summary type="html">上一篇文章通过selenium工具自动搜索爬取哔哩哔哩上面的视频相关信息，今天我们接着上一篇文章，保存视频的图片到本地。</summary>
    
    
    
    <category term="python3 爬虫" scheme="http://xianke5200.github.io/categories/python3-%E7%88%AC%E8%99%AB/"/>
    
    
  </entry>
  
  <entry>
    <title>Python爬取哔哩哔哩视频的相关信息并保存到excel文档</title>
    <link href="http://xianke5200.github.io/2020/07/24/Python%E7%88%AC%E5%8F%96%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9%E8%A7%86%E9%A2%91%E7%9A%84%E7%9B%B8%E5%85%B3%E4%BF%A1%E6%81%AF%E5%B9%B6%E4%BF%9D%E5%AD%98%E5%88%B0excel%E6%96%87%E6%A1%A3/"/>
    <id>http://xianke5200.github.io/2020/07/24/Python%E7%88%AC%E5%8F%96%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9%E8%A7%86%E9%A2%91%E7%9A%84%E7%9B%B8%E5%85%B3%E4%BF%A1%E6%81%AF%E5%B9%B6%E4%BF%9D%E5%AD%98%E5%88%B0excel%E6%96%87%E6%A1%A3/</id>
    <published>2020-07-24T10:36:50.000Z</published>
    <updated>2020-10-16T12:30:53.238Z</updated>
    
    <content type="html"><![CDATA[<p>利用自动化测试工具selenium自动搜索视频信息，自动翻页爬取搜索到的视频相关信息。<br>首先找到自己要爬取数据网页数据，如下<br><img src="https://img-blog.csdnimg.cn/20200803192538130.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NpbmF0XzMzMzIzNTQ0,size_16,color_FFFFFF,t_70" alt="爬取的网页数据"><br>整个流程如下：<br>    1.声明浏览器对象<br>    2.声明浏览器最长等待时间<br>    3.创建excel文件对象<br>    4.新建excel sheet页，并写入头部标签<br>    5.浏览器访问网页地址<br>    6.定位输入窗口，输入文字并回车跳转<br>    7.切换到新标签页<br>    8.等待网页数据加载完成<br>    9.beautifulSoup解析网页数据<br>    10.找到要爬取的数据，并保存到excel中<br>    11.获取搜索到的最大页数<br>    12.等待下一页按钮加载完成，并点击下一页按钮切换到下一页<br>    13.重复8-10步和12步，直到所有页数爬取完毕</p><ol><li><p>声明浏览器对象，并设置浏览器窗口大小</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">browser = webdriver.Chrome()</span><br><span class="line"><span class="comment">#browser = webdriver.PhantomJS()</span></span><br><span class="line">browser.set_window_size(<span class="number">1400</span>, <span class="number">900</span>)</span><br></pre></td></tr></table></figure></li><li><p>创建excel文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">book = xlwt.Workbook(encoding=<span class="string">&#x27;utf-8&#x27;</span>, style_compression=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">sheet = book.add_sheet(<span class="string">&#x27;蔡徐坤篮球&#x27;</span>, cell_overwrite_ok=<span class="literal">True</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">0</span>, <span class="string">&#x27;名称&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">1</span>, <span class="string">&#x27;地址&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">2</span>, <span class="string">&#x27;描述&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">3</span>, <span class="string">&#x27;观看次数&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">4</span>, <span class="string">&#x27;弹幕数&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">5</span>, <span class="string">&#x27;发布时间&#x27;</span>)</span><br></pre></td></tr></table></figure><p>在这里采用xlwt库对excel文件进行写入操作，xlwt库只能写入数据，无法读取数据</p></li><li><p>访问B站，并自动搜索，同时返回视频页数</p></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">search</span>():</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        print(<span class="string">&#x27;开始访问b站....&#x27;</span>)</span><br><span class="line">        browser.get(<span class="string">&quot;https://www.bilibili.com/&quot;</span>)</span><br><span class="line">        </span><br><span class="line">        search = browser.find_element_by_xpath(<span class="string">&#x27;//div[@class=&quot;nav-search&quot;]/form/input&#x27;</span>)</span><br><span class="line">        search.send_keys(<span class="string">&quot;蔡徐坤 篮球&quot;</span>)</span><br><span class="line">        search.send_keys(Keys.ENTER)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 跳转到新的窗口</span></span><br><span class="line">        print(<span class="string">&#x27;跳转到新窗口&#x27;</span>)</span><br><span class="line">        all_h = browser.window_handles</span><br><span class="line">        browser.switch_to.window(all_h[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">        html = browser.page_source</span><br><span class="line">        <span class="comment"># print(html)</span></span><br><span class="line">        soup = BeautifulSoup(html, <span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line">        save_to_excel(soup)</span><br><span class="line"></span><br><span class="line">        total_index = soup.find(class_=<span class="string">&#x27;page-item last&#x27;</span>).find(class_=<span class="string">&#x27;pagination-btn&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> int(total_index.text)</span><br><span class="line">    <span class="keyword">except</span> TimeoutException:</span><br><span class="line">        <span class="keyword">return</span> search()</span><br></pre></td></tr></table></figure><p>3.1 打开浏览器，访问B站</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">browser.get(<span class="string">&quot;https://www.bilibili.com/&quot;</span>)</span><br></pre></td></tr></table></figure><p>3.2 定位搜索框的位置，并填入要搜索的文本，并回车</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">search = browser.find_element_by_xpath(<span class="string">&#x27;//div[@class=&quot;nav-search&quot;]/form/input&#x27;</span>)</span><br><span class="line">  search.send_keys(<span class="string">&quot;蔡徐坤 篮球&quot;</span>)</span><br><span class="line">  search.send_keys(Keys.ENTER)</span><br></pre></td></tr></table></figure><p>selenium可以驱动浏览器代替人工完成各种操作，查找定位要操作的节点，填充数据，模拟点击，拖拽等<br>查找单个节点可以通过如下方法：<br>find_element_by_id 【通过元素的 id 来选择】<br>例：<div id="bdy-inner">test</div>，查找：driver.find_element_by_id(‘bdy-inner’)</p><p>find_element_by_name 【通过元素的 name 来选择】<br>例：<input name="username" type="text">，查找：driver.find_element_by_name(‘password’)</p><p>find_element_by_xpath 【通过 xpath 选择】<br>例：<form id="loginForm">，查找：driver.find_element_by_xpath(“//form[@id=’loginForm’]”)</form></p><p>find_element_by_link_text 【通过链接地址选择】<br>例：<a href="continue.html">continue</a>，查询：driver.find_element_by_link_text(‘continue’)</p><p>find_element_by_partial_link_text 【通过链接的部分地址选择】<br>例：<a href="continue.html">continue</a>，查询：driver.find_element_by_link_text(‘cont’)</p><p>find_element_by_tag_name 【通过元素的名称选择】<br>例：&lt; h1&gt;welcome&lt; h1&gt;，查询：driver.find_element_by_tag_name(‘h1’)</p><p>find_element_by_class_name 【通过元素的 class 选择】<br>例：&lt; p class=”content”&gt;welcome to TRHX’S BLOG!&lt; /p&gt;，查询：driver.find_element_by_class_name(‘content’)</p><p>find_element_by_css_selector 【通过元素的 class 选择】<br>例：&lt; div class=’bdy-inner’&gt;test&lt; /div&gt;，查询：driver.find_element_by_css_selector(‘div.bdy-inner’)</p><p>find_element() 【通用方法，需要传递两个参数：查找方式 By 和值】<br>例：driver.find_element_by_id(‘inner’) 等价于 find_element(By.ID, inner)，使用时需要from selenium.webdriver.common.by import By</p><p>selenium对浏览器的操作也可称之为节点交互，常用的节点交互方式有以下几种<br>    send_keys：模拟按键输入<br>    clear：清除元素的内容<br>    click：单击元素<br>    submit：提交表单</p><p>3.3 完成点击操作后，搜索结果会在新标签页中呈现，这时需要切换到新标签页中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">&#x27;跳转到新窗口&#x27;</span>)</span><br><span class="line">   all_h = browser.window_handles</span><br><span class="line">   browser.switch_to.window(all_h[<span class="number">1</span>])</span><br></pre></td></tr></table></figure><p>3.4 获取第一页的视频相关信息，并保存到excel文档中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">html = browser.page_source</span><br><span class="line"><span class="comment"># print(html)</span></span><br><span class="line">soup = BeautifulSoup(html, <span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line">save_to_excel(soup)</span><br></pre></td></tr></table></figure><p>这里采用beautifulSoup库对网页数据进行解析。<br>常用的解析器有四种,如下：<br>| 解析器 | 使用方法 |<br>|–|–|<br>| Python 标准库 | BeautifulSoup(markup, “html.parser”)     |<br>|LXML HTML 解析器|BeautifulSoup(markup, “lxml”)|<br>|LXML XML 解析器|BeautifulSoup(markup, “xml”)|<br>|html5lib|BeautifulSoup(markup, “html5lib”)|<br>3.5 返回搜索结果的页数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">total_index = soup.find(class_=<span class="string">&#x27;page-item last&#x27;</span>).find(class_=<span class="string">&#x27;pagination-btn&#x27;</span>)</span><br><span class="line"><span class="keyword">return</span> int(total_index.text)</span><br></pre></td></tr></table></figure><p>这里利用beautifulSoup解析器提取名为page-item last的class节点下的pagination-btn节点文本数据，得到总的搜索页数<br>4. 点击下一页按钮，并爬取下一页视频信息保存</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">WAIT = WebDriverWait(browser, <span class="number">20</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">next_page</span>(<span class="params">page_num</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        print(<span class="string">&#x27;获取第(%d)页数据&#x27;</span> % page_num)</span><br><span class="line">        next_btn = WAIT.until(EC.element_to_be_clickable((By.CSS_SELECTOR,</span><br><span class="line">                                                          <span class="string">&#x27;li.page-item.next &gt; button&#x27;</span>)))</span><br><span class="line">        next_btn.click()</span><br><span class="line">        get_source()</span><br><span class="line">    <span class="keyword">except</span> TimeoutException:</span><br><span class="line">        browser.refresh()</span><br><span class="line">        <span class="keyword">return</span> next_page(page_num)</span><br></pre></td></tr></table></figure><p>引入 WebDriverWait 对象，指定最长等待时间，这里最长等待时间20秒，调用它的 until() 方法，传入要等待条件 expected_conditions。比如，这里传入了 element_to_be_clickable这个条件，代表节点被选中，并可以被点击的时候<br>4.1 定位下一页按钮位置，并发送点击事件切换到下一页</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">&#x27;获取第(%d)页数据&#x27;</span> % page_num)</span><br><span class="line">       next_btn = WAIT.until(EC.element_to_be_clickable((By.CSS_SELECTOR,</span><br><span class="line">                                                         <span class="string">&#x27;li.page-item.next &gt; button&#x27;</span>)))</span><br><span class="line">       next_btn.click()</span><br></pre></td></tr></table></figure><p>4.2 切换到下一页后，等待ul.video-list.clearfix节点出现，再获取界面数据，爬取视频信息</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_source</span>():</span></span><br><span class="line">    WAIT.until(EC.presence_of_element_located(</span><br><span class="line">        (By.CSS_SELECTOR, <span class="string">&#x27;ul.video-list.clearfix&#x27;</span>)))</span><br><span class="line">    <span class="comment"># browser.refresh()</span></span><br><span class="line">    html = browser.page_source</span><br><span class="line">    <span class="comment"># print(html)</span></span><br><span class="line">    soup = BeautifulSoup(html, <span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line">    save_to_excel(soup)</span><br></pre></td></tr></table></figure><p>5.最后，保存爬取到的结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_to_excel</span>(<span class="params">soup</span>):</span></span><br><span class="line">    list = soup.find(class_=<span class="string">&#x27;video-list clearfix&#x27;</span>).find_all_next(class_=<span class="string">&#x27;info&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> list:</span><br><span class="line">        item_title = item.find(<span class="string">&#x27;a&#x27;</span>).get(<span class="string">&#x27;title&#x27;</span>)</span><br><span class="line">        item_link = item.find(<span class="string">&#x27;a&#x27;</span>).get(<span class="string">&#x27;href&#x27;</span>)</span><br><span class="line">        item_dec = item.find(class_=<span class="string">&#x27;des hide&#x27;</span>).text</span><br><span class="line">        item_view = item.find(class_=<span class="string">&#x27;so-icon watch-num&#x27;</span>).text</span><br><span class="line">        item_biubiu = item.find(class_=<span class="string">&#x27;so-icon hide&#x27;</span>).text</span><br><span class="line">        item_date = item.find(class_=<span class="string">&#x27;so-icon time&#x27;</span>).text</span><br><span class="line"></span><br><span class="line">        print(<span class="string">&#x27;爬取：&#x27;</span> + item_title)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">global</span> n</span><br><span class="line"></span><br><span class="line">        sheet.write(n, <span class="number">0</span>, item_title)</span><br><span class="line">        sheet.write(n, <span class="number">1</span>, item_link)</span><br><span class="line">        sheet.write(n, <span class="number">2</span>, item_dec)</span><br><span class="line">        sheet.write(n, <span class="number">3</span>, item_view)</span><br><span class="line">        sheet.write(n, <span class="number">4</span>, item_biubiu)</span><br><span class="line">        sheet.write(n, <span class="number">5</span>, item_date)</span><br><span class="line"></span><br><span class="line">        n = n + <span class="number">1</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>提取到名为视频信息节点名为video-list clearfix的class节点的所有下一级名为info的class节点信息后，在提取各个信息存入excel<br>6.完整代码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.common.exceptions <span class="keyword">import</span> TimeoutException</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.ui <span class="keyword">import</span> WebDriverWait</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support <span class="keyword">import</span> expected_conditions <span class="keyword">as</span> EC</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.keys <span class="keyword">import</span> Keys</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> xlwt</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">browser = webdriver.Chrome()</span><br><span class="line"><span class="comment">#browser = webdriver.PhantomJS()</span></span><br><span class="line">WAIT = WebDriverWait(browser, <span class="number">20</span>)</span><br><span class="line">browser.set_window_size(<span class="number">1400</span>, <span class="number">900</span>)</span><br><span class="line"></span><br><span class="line">book = xlwt.Workbook(encoding=<span class="string">&#x27;utf-8&#x27;</span>, style_compression=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">sheet = book.add_sheet(<span class="string">&#x27;蔡徐坤篮球&#x27;</span>, cell_overwrite_ok=<span class="literal">True</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">0</span>, <span class="string">&#x27;名称&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">1</span>, <span class="string">&#x27;地址&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">2</span>, <span class="string">&#x27;描述&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">3</span>, <span class="string">&#x27;观看次数&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">4</span>, <span class="string">&#x27;弹幕数&#x27;</span>)</span><br><span class="line">sheet.write(<span class="number">0</span>, <span class="number">5</span>, <span class="string">&#x27;发布时间&#x27;</span>)</span><br><span class="line"></span><br><span class="line">n = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">search</span>():</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        print(<span class="string">&#x27;开始访问b站....&#x27;</span>)</span><br><span class="line">        browser.get(<span class="string">&quot;https://www.bilibili.com/&quot;</span>)</span><br><span class="line"></span><br><span class="line">        search = browser.find_element_by_xpath(<span class="string">&#x27;//div[@class=&quot;nav-search&quot;]/form/input&#x27;</span>)</span><br><span class="line">        search.send_keys(<span class="string">&quot;蔡徐坤 篮球&quot;</span>)</span><br><span class="line">        search.send_keys(Keys.ENTER)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 跳转到新的窗口</span></span><br><span class="line">        print(<span class="string">&#x27;跳转到新窗口&#x27;</span>)</span><br><span class="line">        all_h = browser.window_handles</span><br><span class="line">        browser.switch_to.window(all_h[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">        html = browser.page_source</span><br><span class="line">        <span class="comment"># print(html)</span></span><br><span class="line">        soup = BeautifulSoup(html, <span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line">        save_to_excel(soup)</span><br><span class="line"></span><br><span class="line">        total_index = soup.find(class_=<span class="string">&#x27;page-item last&#x27;</span>).find(class_=<span class="string">&#x27;pagination-btn&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> int(total_index.text)</span><br><span class="line">    <span class="keyword">except</span> TimeoutException:</span><br><span class="line">        <span class="keyword">return</span> search()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">next_page</span>(<span class="params">page_num</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        print(<span class="string">&#x27;获取第(%d)页数据&#x27;</span> % page_num)</span><br><span class="line">        next_btn = WAIT.until(EC.element_to_be_clickable((By.CSS_SELECTOR,</span><br><span class="line">                                                          <span class="string">&#x27;li.page-item.next &gt; button&#x27;</span>)))</span><br><span class="line">        <span class="comment"># time.sleep(5)</span></span><br><span class="line">        next_btn.click()</span><br><span class="line">        get_source()</span><br><span class="line">    <span class="keyword">except</span> TimeoutException:</span><br><span class="line">        browser.refresh()</span><br><span class="line">        <span class="keyword">return</span> next_page(page_num)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_to_excel</span>(<span class="params">soup</span>):</span></span><br><span class="line">    list = soup.find(class_=<span class="string">&#x27;video-list clearfix&#x27;</span>).find_all_next(class_=<span class="string">&#x27;info&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> list:</span><br><span class="line">        item_title = item.find(<span class="string">&#x27;a&#x27;</span>).get(<span class="string">&#x27;title&#x27;</span>)</span><br><span class="line">        item_link = item.find(<span class="string">&#x27;a&#x27;</span>).get(<span class="string">&#x27;href&#x27;</span>)</span><br><span class="line">        item_dec = item.find(class_=<span class="string">&#x27;des hide&#x27;</span>).text</span><br><span class="line">        item_view = item.find(class_=<span class="string">&#x27;so-icon watch-num&#x27;</span>).text</span><br><span class="line">        item_biubiu = item.find(class_=<span class="string">&#x27;so-icon hide&#x27;</span>).text</span><br><span class="line">        item_date = item.find(class_=<span class="string">&#x27;so-icon time&#x27;</span>).text</span><br><span class="line"></span><br><span class="line">        print(<span class="string">&#x27;爬取：&#x27;</span> + item_title)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">global</span> n</span><br><span class="line"></span><br><span class="line">        sheet.write(n, <span class="number">0</span>, item_title)</span><br><span class="line">        sheet.write(n, <span class="number">1</span>, item_link)</span><br><span class="line">        sheet.write(n, <span class="number">2</span>, item_dec)</span><br><span class="line">        sheet.write(n, <span class="number">3</span>, item_view)</span><br><span class="line">        sheet.write(n, <span class="number">4</span>, item_biubiu)</span><br><span class="line">        sheet.write(n, <span class="number">5</span>, item_date)</span><br><span class="line"></span><br><span class="line">        n = n + <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_source</span>():</span></span><br><span class="line">    WAIT.until(EC.presence_of_element_located(</span><br><span class="line">        (By.CSS_SELECTOR, <span class="string">&#x27;ul.video-list.clearfix&#x27;</span>)))</span><br><span class="line">    <span class="comment"># browser.refresh()</span></span><br><span class="line">    html = browser.page_source</span><br><span class="line">    <span class="comment"># print(html)</span></span><br><span class="line">    soup = BeautifulSoup(html, <span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line">    save_to_excel(soup)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        total = search()</span><br><span class="line">        <span class="comment"># print(total)</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>, int(total)+<span class="number">1</span>):</span><br><span class="line">            next_page(i)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        browser.close()</span><br><span class="line">        browser.quit()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br><span class="line">    book.save(<span class="string">u&#x27;蔡徐坤篮球.xls&#x27;</span>)</span><br></pre></td></tr></table></figure><p>最后将excel文档保存为xls格式，在有的电脑上面保存为xlsx格式时，本地打开文档出现格式错误的问题，将保存格式更改为xls可以解决该问题。</p>]]></content>
    
    
    <summary type="html">利用自动化测试工具selenium自动搜索视频信息，自动翻页爬取搜索到的视频相关信息。</summary>
    
    
    
    <category term="python3 爬虫" scheme="http://xianke5200.github.io/categories/python3-%E7%88%AC%E8%99%AB/"/>
    
    
  </entry>
  
  <entry>
    <title>python pyqt5开发小结</title>
    <link href="http://xianke5200.github.io/2020/07/24/python%20pyqt5%E5%BC%80%E5%8F%91%E5%B0%8F%E7%BB%93/"/>
    <id>http://xianke5200.github.io/2020/07/24/python%20pyqt5%E5%BC%80%E5%8F%91%E5%B0%8F%E7%BB%93/</id>
    <published>2020-07-24T10:36:50.000Z</published>
    <updated>2020-10-16T12:30:05.954Z</updated>
    
    <content type="html"><![CDATA[<p>最近几天用python+pyqt5+QtDesigner编写了两个小软件，在这里做一个简单的总结。<br>1.创建新控件时需要指定父控件<br>2.可以在状态栏上添加额外的文本提示或者进度条显示</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">frame2_bar = QStatusBar()</span><br><span class="line">self.sr_lable = QLabel(self.rom_frame)</span><br><span class="line">   self.sr_lable.setText(<span class="string">&#x27;S:       R:      &#x27;</span>)</span><br><span class="line">  elf.sr_lable.setGeometry(<span class="number">100</span>, frame.height(), <span class="number">50</span>, <span class="number">25</span>)</span><br><span class="line">  frame2_bar.addPermanentWidget(self.sr_lable)</span><br></pre></td></tr></table></figure><p>3.是TextEdit文本填满文本框后。自动向下滚屏</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">self.textEdit.moveCursor(QTextCursor.End)</span><br><span class="line">   self.textEdit.insertPlainText(out_s)</span><br></pre></td></tr></table></figure><p>4.通过事件弹出自动义新窗口</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Form implementation generated from reading ui file &#x27;time_display.ui&#x27;</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Created by: PyQt5 UI code generator 5.15.0</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># WARNING: Any manual changes made to this file will be lost when pyuic5 is</span></span><br><span class="line"><span class="comment"># run again.  Do not edit this file unless you know what you are doing.</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PyQt5 <span class="keyword">import</span> QtCore, QtGui, QtWidgets</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Ui_Dialog</span>(<span class="params">object</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setupUi</span>(<span class="params">self, Dialog</span>):</span></span><br><span class="line">        Dialog.setObjectName(<span class="string">&quot;Dialog&quot;</span>)</span><br><span class="line">        Dialog.resize(<span class="number">280</span>, <span class="number">198</span>)</span><br><span class="line">        self.widget = QtWidgets.QWidget(Dialog)</span><br><span class="line">        self.widget.setGeometry(QtCore.QRect(<span class="number">50</span>, <span class="number">20</span>, <span class="number">191</span>, <span class="number">151</span>))</span><br><span class="line">        self.widget.setObjectName(<span class="string">&quot;widget&quot;</span>)</span><br><span class="line">        self.verticalLayout = QtWidgets.QVBoxLayout(self.widget)</span><br><span class="line">        self.verticalLayout.setContentsMargins(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">        self.verticalLayout.setObjectName(<span class="string">&quot;verticalLayout&quot;</span>)</span><br><span class="line">        self.label_2 = QtWidgets.QLabel(self.widget)</span><br><span class="line">        font = QtGui.QFont()</span><br><span class="line">        font.setPointSize(<span class="number">20</span>)</span><br><span class="line">        self.label_2.setFont(font)</span><br><span class="line">        self.label_2.setObjectName(<span class="string">&quot;label_2&quot;</span>)</span><br><span class="line">        self.verticalLayout.addWidget(self.label_2)</span><br><span class="line">        self.label = QtWidgets.QLabel(self.widget)</span><br><span class="line">        font = QtGui.QFont()</span><br><span class="line">        font.setPointSize(<span class="number">20</span>)</span><br><span class="line">        self.label.setFont(font)</span><br><span class="line">        self.label.setAlignment(QtCore.Qt.AlignCenter)</span><br><span class="line">        self.label.setObjectName(<span class="string">&quot;label&quot;</span>)</span><br><span class="line">        self.verticalLayout.addWidget(self.label)</span><br><span class="line">        self.pushButton = QtWidgets.QPushButton(self.widget)</span><br><span class="line">        self.pushButton.setObjectName(<span class="string">&quot;pushButton&quot;</span>)</span><br><span class="line">        self.verticalLayout.addWidget(self.pushButton)</span><br><span class="line"></span><br><span class="line">        self.retranslateUi(Dialog)</span><br><span class="line">        QtCore.QMetaObject.connectSlotsByName(Dialog)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">retranslateUi</span>(<span class="params">self, Dialog</span>):</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> ex_pygui.time_display <span class="keyword">import</span> Ui_Dialog  <span class="comment"># 显示自定义的弹出窗口</span></span><br><span class="line">        self.di = QDialog()</span><br><span class="line">        timedisplay = Ui_Dialog()</span><br><span class="line">        timedisplay.setupUi(self.di)</span><br><span class="line">        now = time.localtime()</span><br><span class="line">        timedisplay.label.setText(<span class="string">&#x27;%02d:%02d:%02d&#x27;</span> %(now.tm_hour, now.tm_min, now.tm_sec))</span><br><span class="line">        timedisplay.pushButton.clicked.connect(self.di.close)</span><br><span class="line">        self.di.setWindowModality(Qt.ApplicationModal) <span class="comment">#锁定子窗口，关闭子窗口后才可以操作父窗口</span></span><br><span class="line"></span><br><span class="line">        self.di.show()</span><br></pre></td></tr></table></figure><p>可以先创建一个QDialog窗口，然后在外部调用，如上代码所示<br>5.保存Excel文件为xlsx格式报错，可以将文件保存为xls格式<br>6.sqlite数据库确实简便好用<br>7.python的线程开启后，在死循环内会一直运行，无法暂停和关闭，需要重新编写定义</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ser_recvthread</span>(<span class="params">threading.Thread</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, func</span>):</span></span><br><span class="line">        super(ser_recvthread, self).__init__()</span><br><span class="line">        self.func = func</span><br><span class="line">        self.__flag = threading.Event()  <span class="comment"># 用于暂停线程的标识</span></span><br><span class="line">        self.__flag.set()  <span class="comment"># 设置为True</span></span><br><span class="line">        self.__running = threading.Event()  <span class="comment"># 用于停止线程的标识</span></span><br><span class="line">        self.__running.set()  <span class="comment"># 将running设置为True</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">while</span> self.__running.isSet():</span><br><span class="line">            self.__flag.wait()  <span class="comment"># 为True时立即返回, 为False时阻塞直到内部的标识位为True后返回</span></span><br><span class="line">            self.func()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">pause</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.__flag.clear()  <span class="comment"># 设置为False, 让线程阻塞</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">resume</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.__flag.set()  <span class="comment"># 设置为True, 让线程停止阻塞</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">stop</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.__flag.clear()</span><br><span class="line">        self.__running.clear()  <span class="comment"># 设置为False</span></span><br><span class="line"></span><br><span class="line">self.ser_thread = ser_recvthread(self.ser_recv)</span><br><span class="line">self.ser_thread.start()</span><br><span class="line">self.ser_thread.pause()</span><br><span class="line">self.ser_thread.resume()</span><br></pre></td></tr></table></figure><p>8.pyserial获取串口列表，并添加到combox中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> serial.tools.list_ports</span><br><span class="line">self.ser_num.clear()</span><br><span class="line">   plist = list(serial.tools.list_ports.comports())</span><br><span class="line">   <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(plist)):</span><br><span class="line">       plist_0 = list(plist[i])</span><br><span class="line">       <span class="comment">#print(&#x27;串口号：&#x27;, list(plist[i]),str(plist_0[0]))</span></span><br><span class="line">       self.ser_num.addItem(plist_0[<span class="number">0</span>])</span><br></pre></td></tr></table></figure><p>9.在这次写代码的过程中，我通过线程读取串口数据时，在数据量比较小，且发送数据比较慢的情况下，串口接收还比较正常，但是在数据量比较大且传输速度比较快时会出现卡死的情况，换成定时器定时1ms读取就没问题；不知道是线程部分的逻辑有问题还是怎么回事，暂时还没弄明白，暂且搁置，哪位大神如果看到这，有相关解决办法，欢迎指正。所以暂且推荐读取串口数据时采用定时读取的方式。</p><p>暂时就写到这，后续想到有必要记录的再继续添加。</p>]]></content>
    
    
    <summary type="html">最近几天用python+pyqt5+QtDesigner编写了两个小软件</summary>
    
    
    
    <category term="GUI" scheme="http://xianke5200.github.io/categories/GUI/"/>
    
    
  </entry>
  
  <entry>
    <title>获取程序编译后链接脚本中变量</title>
    <link href="http://xianke5200.github.io/2019/12/19/%E8%8E%B7%E5%8F%96%E7%A8%8B%E5%BA%8F%E7%BC%96%E8%AF%91%E5%90%8E%E9%93%BE%E6%8E%A5%E8%84%9A%E6%9C%AC%E4%B8%AD%E5%8F%98%E9%87%8F/"/>
    <id>http://xianke5200.github.io/2019/12/19/%E8%8E%B7%E5%8F%96%E7%A8%8B%E5%BA%8F%E7%BC%96%E8%AF%91%E5%90%8E%E9%93%BE%E6%8E%A5%E8%84%9A%E6%9C%AC%E4%B8%AD%E5%8F%98%E9%87%8F/</id>
    <published>2019-12-19T09:11:39.000Z</published>
    <updated>2020-10-19T13:19:00.459Z</updated>
    
    <content type="html"><![CDATA[<p>sct文件：各段在内存中的分配情况，每一次编译完后</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">extern</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> Image$$ER_IROM1$$Base;</span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> Image$$ER_IROM1$$Limit;</span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> Image$$ER_IROM1$$Length;   </span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> Image$$RW_IRAM1$$Base;</span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> Image$$RW_IRAM1$$Limit;</span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> Image$$RW_IRAM1$$Length;     </span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> Image$$RW_IRAM1$$ZI$$Base;</span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> Image$$RW_IRAM1$$ZI$$Limit;</span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> Image$$RW_IRAM1$$ZI$$Length;    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> base,limit,length;</span><br><span class="line">base = (<span class="keyword">unsigned</span> <span class="keyword">int</span> )&amp;Image$$ER_IROM1$$Base;</span><br><span class="line">limit = (<span class="keyword">unsigned</span> <span class="keyword">int</span> )&amp;Image$$ER_IROM1$$Limit;</span><br><span class="line">length = (<span class="keyword">unsigned</span> <span class="keyword">int</span> )&amp;Image$$ER_IROM1$$Length;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\nER_IROM1 Base = 0x%x\nER_IROM1 Limit = 0x%x\nER_IROM1 Length = %d\n&quot;</span>,base,limit,length);</span><br><span class="line"></span><br><span class="line">base = (<span class="keyword">unsigned</span> <span class="keyword">int</span> )&amp;Image$$RW_IRAM1$$Base;</span><br><span class="line">limit = (<span class="keyword">unsigned</span> <span class="keyword">int</span> )&amp;Image$$RW_IRAM1$$Limit;</span><br><span class="line">length = (<span class="keyword">unsigned</span> <span class="keyword">int</span> )&amp;Image$$RW_IRAM1$$Length;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\nRW_IRAM1 Base = 0x%x\nRW_IRAM1 Limit = 0x%x\nRW_IRAM1 Length = %d\n&quot;</span>,base,limit,length);</span><br><span class="line"></span><br><span class="line">base = (<span class="keyword">unsigned</span> <span class="keyword">int</span> )&amp;Image$$RW_IRAM1$$ZI$$Base;</span><br><span class="line">limit = (<span class="keyword">unsigned</span> <span class="keyword">int</span> )&amp;Image$$RW_IRAM1$$ZI$$Limit;</span><br><span class="line">length = (<span class="keyword">unsigned</span> <span class="keyword">int</span> )&amp;Image$$RW_IRAM1$$ZI$$Length;  </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\nRW_IRAM1_ZI Base = 0x%x\nRW_IRAM1_ZI Limit = 0x%x\nRW_IRAM1_ZI Length = %d\n&quot;</span>,base,limit,length);</span><br></pre></td></tr></table></figure><pre><code>Image$$ER_IROM1$$Length : CODE段和RO_data段的大小Image$$RW_IRAM1$$Length : RW_data段的大小Image$$RW_IRAM1$$ZI$$Length : ZI_data段的大小</code></pre>]]></content>
    
    
    <summary type="html">各段在内存中的分配情况，每一次编译完后</summary>
    
    
    
    <category term="驱动" scheme="http://xianke5200.github.io/categories/%E9%A9%B1%E5%8A%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>Ubuntu启动报错未知文件系统错误</title>
    <link href="http://xianke5200.github.io/2019/08/08/Ubuntu%E5%90%AF%E5%8A%A8%E6%8A%A5%E9%94%99error_unknown%20filesystem%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>http://xianke5200.github.io/2019/08/08/Ubuntu%E5%90%AF%E5%8A%A8%E6%8A%A5%E9%94%99error_unknown%20filesystem%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</id>
    <published>2019-08-08T07:42:29.000Z</published>
    <updated>2020-10-16T12:36:05.985Z</updated>
    
    <content type="html"><![CDATA[<p>我安装的时ubuntu14.04，长时间没启用，最近准备进入Ubuntu系统的时候就出现报错<br>unknown filesystem<br>grub rescue&gt;<br>解决方案<br>1.如果不知道自己安装的ununtu系统启动文件再那个分区，可以先查找分区<br>grub rescue&gt; ls<br>执行该命令后<br>就会出现电脑上类似如下的所有的分区列表<br>(hd0),(hd0,gpt0)…<br>2.接下来查找查找具体的Ubuntu系统所在分区<br>grub rescue&gt;ls (hd0,gpt0)<br>这样就可以每个分区的相关信息，遍历所有的分区查找到Ubuntu所在分区<br>如果Ubuntu不再该分区，就还是会出现unknown filesystem的提示<br>3.修改启动分区<br>找到ubuntu所在分区后<br>执行如下指令：<br>grub rescue&gt;set root=(hs0,gpt10)(我的Ubuntu分区实在第10个分区)<br>grub rescue&gt;set prefix=(hd0,gpt10)/boot/grub<br>grub rescue&gt;insmod normal<br>grub rescue&gt;normal<br>依次执行后就可以正常启动ubuntu系统了<br>4.修复grub<br>正常启动ubuntu后，启动命令行<br>执行如下指令<br>sudo update-rub<br>sudo grub-install/dev/sda(重建grub到第一硬盘mbr)<br>到这该问题就解决了。</p>]]></content>
    
    
    <summary type="html">我安装的时ubuntu14.04，长时间没启用，最近准备进入Ubuntu系统的时候就出现报错</summary>
    
    
    
    <category term="Linux" scheme="http://xianke5200.github.io/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>项目调试一点小结</title>
    <link href="http://xianke5200.github.io/2019/08/08/%E9%A1%B9%E7%9B%AE%E8%B0%83%E8%AF%95%E4%B8%80%E7%82%B9%E5%B0%8F%E7%BB%93/"/>
    <id>http://xianke5200.github.io/2019/08/08/%E9%A1%B9%E7%9B%AE%E8%B0%83%E8%AF%95%E4%B8%80%E7%82%B9%E5%B0%8F%E7%BB%93/</id>
    <published>2019-08-08T07:42:29.000Z</published>
    <updated>2020-10-19T13:18:48.818Z</updated>
    
    <content type="html"><![CDATA[<p>  最近调试nordic项目时，遇到一个奇怪的问题，在将bootloader和应用程序烧录到板子上后，出现程序跑不起来的情况。<br>  在Nordic上有两个引脚默认是作为NFCT的天线引脚来用的，因为项目需要，这两个引脚需要作为GPIO引脚来用，因此需要配置寄存器来使能这两个引脚的GPIO功能。<img src="https://img-blog.csdnimg.cn/20190808144836552.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NpbmF0XzMzMzIzNTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>  <img src="https://img-blog.csdnimg.cn/20190808150916997.png" alt="在这里插入图片描述"><br>  在项目上硬件设计上，通过引脚控制一个MOS管来控制，电路电源VDD的打开和关闭，同时VDD和一个10uF电容串联接地。<br>  在没有配置NFCT两个引脚为GPIO之前，我们做了如下一些测试，首先利用示波器查看MOS管输出脚的电平，发现在MOS管开通情况下，输出脚电平只有2.6V左右，比理想的3.3V低，同时测试MOS管的控制脚电平，控制脚电平电压大概有0.9V.比正常的0V略高；出现这种情况是由于，NFCT两个引脚没有配置为GPIO脚，这两个引脚处于悬浮状态，无法输出准确的电平。<br>  在配置两个引脚为GPIO引脚后，出现板子无法正常运行的情况，这时我们在继续上述测试，发现有时候改变MOS管控制脚的电平的时候，对应的VDD电平只是瞬间变化一下，然后又会恢复到改变MOS管控制脚电平之前的状态，这就会导致其他器件IC无法正常工作；这是再测试芯片供电电平，改变MOS管控制脚电平，在示波器上发现芯片供电的电平状态会出现瞬间变为低电平的然后又变成高电平的情况；可以确定芯片在改变MOS管控制脚电平的时候出现了复位。所以就导致板子出现一直复位的情况，无法正常运行的情况。再看硬件电路，会发现在打开VDD电源的瞬间，由于VDD和电容串联，在电容的作用下，会出现很大的冲激电流，导致芯片供电的LDO进入保护状态导致复位。<br>  解决方法：板子上的i2c之前已经外接上拉电阻和VDD相连，所以在打开VDD电源之前可以先配置i2c的两个引脚为高电平，并延时一段时间，给vdd端的电容足够时间充电，来防止在打开MOS管的时候产生很大的冲激电流，导致复位。在打开电源以后，再把i2c两引脚配置为输入。</p>]]></content>
    
    
    <summary type="html">最近调试nordic项目时，遇到一个奇怪的问题，在将bootloader和应用程序烧录到板子上后，出现程序跑不起来的情况。</summary>
    
    
    
    <category term="Nordic" scheme="http://xianke5200.github.io/categories/Nordic/"/>
    
    
  </entry>
  
  <entry>
    <title>提升刷屏速度，降低显示水纹效果的一点想法</title>
    <link href="http://xianke5200.github.io/2019/08/08/%E6%8F%90%E5%8D%87%E5%88%B7%E5%B1%8F%E9%80%9F%E5%BA%A6%EF%BC%8C%E9%99%8D%E4%BD%8E%E6%98%BE%E7%A4%BA%E6%B0%B4%E7%BA%B9%E6%95%88%E6%9E%9C%E7%9A%84%E4%B8%80%E7%82%B9%E6%83%B3%E6%B3%95/"/>
    <id>http://xianke5200.github.io/2019/08/08/%E6%8F%90%E5%8D%87%E5%88%B7%E5%B1%8F%E9%80%9F%E5%BA%A6%EF%BC%8C%E9%99%8D%E4%BD%8E%E6%98%BE%E7%A4%BA%E6%B0%B4%E7%BA%B9%E6%95%88%E6%9E%9C%E7%9A%84%E4%B8%80%E7%82%B9%E6%83%B3%E6%B3%95/</id>
    <published>2019-08-08T06:16:58.000Z</published>
    <updated>2020-10-19T13:18:13.097Z</updated>
    
    <content type="html"><![CDATA[<p>一般再nordic上画图都是采用emwin库函数画图，但是这样都比较慢，因为库函数都是每次读取图片的一行数据写入屏中显示，画图过程中水纹比较明显，所以之前自己从flash中读取图片数据，不采用库函数，自己读取显示可以一次从flash中，读取超过一行的数据，这样可以明显的，提升刷屏效果，但是当图片数据比较大，刷屏的频次比较快时，也会有水纹效果，所以还是有点不如人意。<br>所以这里我想，是不是可以在flash中划分一块整屏大小的区域，用来存储一整屏大小的数据，当那些图片比较大，刷屏频次快的界面时，可以先将这一整屏的数据写入到flash中划分的区域，然后再将falsh中的数据读取出来写入到屏幕中显示；相比之前，这样的话每次只需要刷一整屏的数据就可以完成显示，相当于在flash中写入一张整屏大小图片的数据，然后将这张图片的数据读取出来显示，按我之前的自己从flash中读取数据显示的方法，在240*240的屏幕上，刷一整屏的数据大概需要200ms，速度应该算是比较快的，但是在显示指针表盘时，特别是在显示秒针的情况下，由于视觉暂留效果，还是会有轻微的刷屏水纹效果。<br>或许还可以更进一步，将屏幕划分为四块区域，每块区域在flash对应的有一块存储空间，当屏幕上的显示部分需要改动的不太大时，比如只是文字，这样就可以直接显示在屏幕上；如果要改动秒针，或者要刷新的某一部分短时间内要多次刷新，就只需要改动这四块区域中的某一块，或者两块，这样的话，需要刷新的部分就显著减少了，刷屏是的效果也会比较好。</p>]]></content>
    
    
    <summary type="html">一般再nordic上画图都是采用emwin库函数画图，但是这样都比较慢，因为库函数都是每次读取图片的一行数据写入屏中显示</summary>
    
    
    
    <category term="GUI" scheme="http://xianke5200.github.io/categories/GUI/"/>
    
    
  </entry>
  
  <entry>
    <title>4412学习笔记</title>
    <link href="http://xianke5200.github.io/2019/07/05/4412%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://xianke5200.github.io/2019/07/05/4412%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2019-07-05T11:33:54.000Z</published>
    <updated>2020-10-16T13:33:20.005Z</updated>
    
    <content type="html"><![CDATA[<p>局域网通信：<br>同一网段：当一个网路的IP地址与子网掩码相与之后的值与另一个网络的IP地址与子网掩码相与值后的值相等的时候，就可以认为两个网络处于同一网段，这时两个网络就可以通过网络进行通信。确认两个网络是否可以通信，可以使用ping指令（ping + ip）。<br>    假如现在有两个网络设备，可以将两个网络设备直接利用网线连接在一起或者利用路由器，两个网络设备接在同一个路由器上，然后在其中一个网络设备上使用<strong>ping + 另一设备的网络地址</strong>，如果可以ping通，就表示两个网络再同一网段，可以正常通信；如果ping不通，可以手动修改两个网络设备的ip地址，使得这两个网络处于同一网段，就可以建立简单的局域网通信了。</p>]]></content>
    
    
    <summary type="html">局域网通信：</summary>
    
    
    
    <category term="Linux" scheme="http://xianke5200.github.io/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>关于提升仿动态图显示速度的一点想法</title>
    <link href="http://xianke5200.github.io/2019/06/27/%E5%85%B3%E4%BA%8E%E6%8F%90%E5%8D%87%E4%BB%BF%E5%8A%A8%E6%80%81%E5%9B%BE%E6%98%BE%E7%A4%BA%E9%80%9F%E5%BA%A6%E7%9A%84%E4%B8%80%E7%82%B9%E6%83%B3%E6%B3%95/"/>
    <id>http://xianke5200.github.io/2019/06/27/%E5%85%B3%E4%BA%8E%E6%8F%90%E5%8D%87%E4%BB%BF%E5%8A%A8%E6%80%81%E5%9B%BE%E6%98%BE%E7%A4%BA%E9%80%9F%E5%BA%A6%E7%9A%84%E4%B8%80%E7%82%B9%E6%83%B3%E6%B3%95/</id>
    <published>2019-06-27T09:18:49.000Z</published>
    <updated>2020-10-16T12:37:22.304Z</updated>
    
    <content type="html"><![CDATA[<p>典型的BMP图像文件由四部分组成：<br>1：位图头文件数据结构，它包含BMP图像文件的类型、显示内容等信息；<br>2：位图信息数据结构，它包含有BMP图像的宽、高、压缩方法，以及定义颜色等信息；<br>3：调色板，这个部分是可选的，有些位图需要调色板，有些位图，比如真彩色图（24位的BMP）就不需要调色板；<br>4：位图数据，这部分的内容根据BMP位图使用的位数不同而不同，在24位图中直接使用RGB，而其他的小于24位的使用调色板中颜色索引值。<br>其中位图文件数据结构为14个字节，结构组成如下：<br>typedef struct tagBITMAPFILEHEADER<br>{<br>WORD bfType;//位图文件的类型，必须为BM(1-2字节）<br>DWORD bfSize;//位图文件的大小，以字节为单位（3-6字节，低位在前）<br>WORD bfReserved1;//位图文件保留字，必须为0(7-8字节）<br>WORD bfReserved2;//位图文件保留字，必须为0(9-10字节）<br>DWORD bfOffBits;//位图数据的起始位置，以相对于位图（11-14字节，低位在前）<br>//文件头的偏移量表示，以字节为单位<br>}attribute((packed)) BITMAPFILEHEADER;<br>在32位MCU中要注意字节对齐，否则读取出来的数据可能会对不上，该结构体中的bfsize元素，代表的是整个bmp文件的大小，也就是bmp文件4个部分的总大小。<br>位图信息数据结构位40个字节，结构组成如下：<br>typedef struct tagBITMAPINFOHEADER<br>{<br>DWORD biSize;//本结构所占用字节数（15-18字节）<br>LONG biWidth;//位图的宽度，以像素为单位（19-22字节）<br>LONG biHeight;//位图的高度，以像素为单位（23-26字节）<br>WORD biPlanes;//目标设备的级别，必须为1(27-28字节）<br>WORD biBitCount;//每个像素所需的位数，必须是1（双色），（29-30字节）<br>//4(16色），8(256色）16(高彩色)或24（真彩色）之一<br>DWORD biCompression;//位图压缩类型，必须是0（不压缩），（31-34字节）<br>//1(BI_RLE8压缩类型）或2(BI_RLE4压缩类型）之一<br>DWORD biSizeImage;//位图的大小(其中包含了为了补齐行数是4的倍数而添加的空字节)，以字节为单位（35-38字节）<br>LONG biXPelsPerMeter;//位图水平分辨率，每米像素数（39-42字节）<br>LONG biYPelsPerMeter;//位图垂直分辨率，每米像素数（43-46字节)<br>DWORD biClrUsed;//位图实际使用的颜色表中的颜色数（47-50字节）<br>DWORD biClrImportant;//位图显示过程中重要的颜色数（51-54字节）<br>}attribute((packed)) BITMAPINFOHEADER;<br>有颜色表的bmp文件中，颜色表的大小一般位16个字节。<br>位图数据：<br>         一般位图数据的记录顺序是从左到右，从下到上，所以图片的有效数据是倒着存储的，也就是第一行的数据一般在文件的最末尾，最后一行数据在文件的颜色表的后面，所以当我们调用ucgui的显示函数画图时，uigui的内部函数是，从文件底部数据开始一行一行的读取，然后显示在屏幕上，但是这样速度会比较慢；而且图片数据是以四字节对齐的，而且当图片的宽度为奇数，图片数据每行后面补零，保证数据是四字节对齐，这时ucgui内部会对这些补齐的数据进行处理，这同样会造成时间的浪费。<br>         我们可以自己编写一个读取函数，先读取两个文件结构的信息，得到每帧bmp图片的大小，宽度，高度，数据偏移量，然后再根据数据偏移量读取图片有效数据，这时我们可以一次读取多行数据，因为每行数据量是相等的，所以我们也很容易对补零的数据进行处理，这样就可以显著提升仿动态图的显示效果，防止刷屏水纹的出现。</p>]]></content>
    
    
    <summary type="html">典型的BMP图像文件由四部分组成</summary>
    
    
    
    <category term="驱动" scheme="http://xianke5200.github.io/categories/%E9%A9%B1%E5%8A%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>软件QSPI调试</title>
    <link href="http://xianke5200.github.io/2019/05/20/%E8%BD%AF%E4%BB%B6QSPI%E8%B0%83%E8%AF%95/"/>
    <id>http://xianke5200.github.io/2019/05/20/%E8%BD%AF%E4%BB%B6QSPI%E8%B0%83%E8%AF%95/</id>
    <published>2019-05-20T10:29:27.000Z</published>
    <updated>2020-10-19T13:18:54.944Z</updated>
    
    <content type="html"><![CDATA[<p>  相对于spi，qspi的是四条数据线并行传输数据，读写速度是普通spi的四倍。spi的工作模式有四种，但是qspi的工作模式只有两种也就是模式0（CPOL=0,CPOH=1）和模式3（CPOL=1,CPOL=1）.<br>  在使用软件qspi前，需要先使能对应芯片的qspi功能，一般是先读取使能位的状态寄存器，根据状态寄存器的qspi状态位判断该芯片当前是否已开启qspi，qspi与普通spi不能同时使用，在同一时刻只能有一种起作用。在qspi功能未开启前，需要先通过普通spi功能，来读写qspi使能状态位，开启qspi的功能。在通过普通spi读写状态寄存器时，需要先将hold和wp两个对应的io口拉高，来保证数据的有效传输。<br>  在使用普通spi或者qspi读写的可以通过直接操作寄存器的方式来优化程序的执行速度。<br>  在编写读写函数时要注意时序的问题，模式0：没有读写操作时，CLK引脚拉低，在时钟线的第一个边沿读写数据。<br>                                                                  模式1：没有读写操作时，CLK引脚拉高，在时钟线的第二个边沿读写数据。</p><pre><code>  __INLINE ret_code_t gpio_spi_drv_xfer(uint8_t *ptx_buf, uint16_t tx_length, uint8_t *prx_buf, uint16_t rx_length)&#123;ret_code_t ret = NRF_SUCCESS;uint8_t *rx_temp = prx_buf;GPIO_CS_LOW;if (tx_length)&#123;    for(int i = 0; i &lt; tx_length; i++)    &#123;        uint8_t tx_temp = ptx_buf[i];        for(int j = 0; j &lt; 8; j++)        &#123;            GPIO_CLK_LOW;            if(tx_temp &amp; 0x80)            &#123;                GPIO_SPI_MOSI_HIGH;            &#125;            else            &#123;                GPIO_SPI_MOSI_LOW;            &#125;            tx_temp &lt;&lt;= 1;            GPIO_CLK_HIGH;        &#125;    &#125;&#125;if (rx_length)&#123;            for(int i = 0; i &lt; rx_length; i++)    &#123;    #if (MISO_PIN != 0XFF)        for(unsigned char j = 0; j &lt; 8; j++)        &#123;            GPIO_CLK_LOW;            GPIO_CLK_HIGH;            rx_temp[i] &lt;&lt;= 1;            if(GPIO_SPI_MISO)            &#123;                rx_temp[i]++;            &#125;        &#125;    #endif    &#125;&#125;GPIO_CS_HIGH;return ret;&#125;__INLINE ret_code_t gpio_qspi_drv_xfer(uint8_t *ptx_buf, uint16_t tx_length, uint8_t *prx_buf, uint16_t rx_length)&#123;ret_code_t ret = NRF_SUCCESS;uint8_t *rx_temp = prx_buf;QSPI_LOCK();GPIO_CS_LOW;//qspi_drv_set_output();if (tx_length &gt; 0)&#123;    QSPI_DRV_SET_OUTPUT(0xf0);// set pin (28-31) dir to output    int size = tx_length;    uint8_t byte_reg = 0;    for(int i = 0; i &lt; size; i++)    &#123;        uint8_t tx_temp = (ptx_buf[i] &gt;&gt; 4) &amp; 0x0f;        GPIO_CLK_LOW;        //qspi_drv_write_data(tx_temp);        byte_reg = QSPI_READ_WRITE_REG();// get the pin (24 - 31) state        QSPI_DRV_WRITE_DAT(((tx_temp&lt;&lt;4)&amp;0xf0) | (byte_reg&amp;0x0f));        __nop();        GPIO_CLK_HIGH;        __nop();        GPIO_CLK_LOW;        //qspi_drv_write_data(ptx_buf[i]);        byte_reg = QSPI_READ_WRITE_REG();        QSPI_DRV_WRITE_DAT(((ptx_buf[i]&lt;&lt;4)&amp;0xf0) | (byte_reg&amp;0x0f));        __nop();        GPIO_CLK_HIGH;        __nop();    &#125;    GPIO_CLK_HIGH;&#125;__disable_irq();if (rx_length)&#123;            //qspi_drv_set_intput();    QSPI_DRV_SET_INPUT(0xf0);    for(int i = 0; i &lt; rx_length; i++)    &#123;            GPIO_CLK_LOW;        __nop();__nop();__nop();        GPIO_CLK_HIGH;        rx_temp[i] = QSPI_DRV_READ_DAT();        __nop();        rx_temp[i] = rx_temp[i] &amp; 0xf0;        GPIO_CLK_LOW;        __nop();__nop();__nop();        GPIO_CLK_HIGH;        rx_temp[i] |= (QSPI_DRV_READ_DAT() &gt;&gt; 4);        __nop();    &#125;    GPIO_CLK_HIGH;&#125;__enable_irq();GPIO_CS_HIGH;QSPI_UNLOCK();return ret;&#125;</code></pre>]]></content>
    
    
    <summary type="html">相对于spi，qspi的是四条数据线并行传输数据，读写速度是普通spi的四倍。spi的工作模式有四种</summary>
    
    
    
    <category term="驱动" scheme="http://xianke5200.github.io/categories/%E9%A9%B1%E5%8A%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>csr8610调试小结</title>
    <link href="http://xianke5200.github.io/2018/12/21/csr8610%E8%B0%83%E8%AF%95%E5%B0%8F%E7%BB%93/"/>
    <id>http://xianke5200.github.io/2018/12/21/csr8610%E8%B0%83%E8%AF%95%E5%B0%8F%E7%BB%93/</id>
    <published>2018-12-21T09:08:55.000Z</published>
    <updated>2020-10-16T12:22:49.740Z</updated>
    
    <content type="html"><![CDATA[<p>  为了调试CSR8610调通，把自己折腾的简直怀疑人生，花费了两个星期，总算是调好了，所以来唠叨两句。<br>  首先先列举一下csr官方的两个工具，一个config tool，编辑自己的配置文件，一个ps tool，烧录工具。<br>  利用csr8610实现的功能比较简单，因为博主比较渣，所以尽管是简单的东西，还是折腾的够呛；接下来说说<br>调试的时候遇到的一些bug，首先是得到蓝牙的连接状态，可以通过读取led事件，得到连接状态，虽然<br>8610固件内部会自动向我们配置的io口输出状态，配置io利用<br>config tool即可，<img src="https://img-blog.csdnimg.cn/20181214182323389.png" alt="在config tool工具的input/output配置项中配置即可"><br>后来发现这几个状态都不是连接状态，想从按键事件事件中得到也不可行。从led得到连接状态的具体配置参看如下：<br><img src="https://img-blog.csdnimg.cn/20181214182848191.png" alt="主要就是这三个配置项"><br>LEDs state：因为我只想得到连接状态，所以我把里面的所有项全都移除了，不移除是否会有影响还需验证。<br>LEDs event：<br><img src="https://img-blog.csdnimg.cn/20181214183015218.png" alt="在这里插入图片描述"><br>LEDs filter：<br><img src="https://img-blog.csdnimg.cn/2018121418305228.png" alt="在这里插入图片描述"><br>后面的LED 0，可以配置成其它项，只要程序上相对应即可。<br>有几点需要注意一下<br>如果使用的8610上的io大于12，那么就需要通过config tool工具map成gpio<br><img src="https://img-blog.csdnimg.cn/20181221172052328.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NpbmF0XzMzMzIzNTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>csr8610默认会输出一些状态，io口也可以随意配置，不过这是要注意io口输出的电平，因为8610中有些io口默认输出的电平为1.8V，当然也可以改变硬件电路来使输出电平达到3.3V，相应功耗也会变高。<br><img src="https://img-blog.csdnimg.cn/20181221172211458.png" alt="VDD_PADS接3.3V可以使8610 pio输出3.3v"><br>还有一点就是注意io口的相互影响，这个主要事配置文件要配置正确，之前调试的时候就遇到过这种情况，配置文件没有配置正确，通过控制io电平使8610从连接状态进入配对状态时，8610对指令不响应。出现这种情况的原因，可能是由于我主控芯片上多个io口和8610相连接，但是实际用到的控制io没有那么多，而且也没有通过config tool工具对这些io进行配置，从而导致io口相互影响，指令失效的问题。</p>]]></content>
    
    
    <summary type="html">为了调试CSR8610调通，把自己折腾的简直怀疑人生，花费了两个星期，总算是调好了，所以来唠叨两句。</summary>
    
    
    
    <category term="CSR8610" scheme="http://xianke5200.github.io/categories/CSR8610/"/>
    
    
  </entry>
  
  <entry>
    <title>Xmodem协议</title>
    <link href="http://xianke5200.github.io/2018/11/12/Xmodem%E5%8D%8F%E8%AE%AE/"/>
    <id>http://xianke5200.github.io/2018/11/12/Xmodem%E5%8D%8F%E8%AE%AE/</id>
    <published>2018-11-12T09:21:00.000Z</published>
    <updated>2020-10-16T12:36:42.566Z</updated>
    
    <content type="html"><![CDATA[<p>   串行通信的文件传输协议主要有：Xmodem、Ymodem、Zmodem和KERMIT等。<br>   Xmodem协议一般支持128字节数据包，并且一般支持校验和、CRC两种校验方式，在出现数据包错误的情况下支持多次重传（一般为10次）。Xmodem协议传输有接收程序和发送程序完成，先由接收程序发送协商字符，协商校验方式，协商通过之后发送程序就开始发送数据包，接收程序接收到完整的一个数据包之后按照协商的方式对数据包进行校验。校验通过之后发送确认字符，然后发送程序继续发送下一包；如果校验失败，则发送否认字符，发送程序重传此数据包。<br>    定义：<br>    SOH    01H（modem数据头）<br>    EOT    04H（发送结束）<br>    ACK    06H（应答）<br>    NAK    15H（非应答）<br>    CAN    18H（取消发送）<br>    Xmodem数据包，包含一个标题开始字符，一个单字节包序号，一个包序号的补码，128字节数据和一个双字节的CRC校验。<br>    <img src="https://img-blog.csdnimg.cn/20181112170744164.png" alt="CRC校验信息包格式"><br>    1.校验和信息包：<br>    <img src="https://img-blog.csdnimg.cn/20181112170834209.png" alt="在这里插入图片描述"><br>    校验和方式传输流程：<br>        接收方要求发送方以校验和方式发送时以NAK来请求，发送方将对此做出应答。如下图：<br>        <img src="https://img-blog.csdnimg.cn/20181112171029363.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NpbmF0XzMzMzIzNTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">    <img src="https://img-blog.csdnimg.cn/20181112171044179.png" alt="在这里插入图片描述"><br>2.CRC校验信息包<br><img src="https://img-blog.csdnimg.cn/20181112171121839.png" alt="在这里插入图片描述"><br>计算16位CRC校验的除数多项式为X ^ 16 + X ^ 12 + X ^ 5 + 1，信息报中的128数据字节将参加CRC校验的计算，在发送端CRC16的高字节在前，低字节在后。<br>传输流程：接收方要求发送方以CRC校验方式发送时以‘C’来请求，发送方将对此作出应答。<br><img src="https://img-blog.csdnimg.cn/20181112171614997.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NpbmF0XzMzMzIzNTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20181112171625558.png" alt="在这里插入图片描述"><br>信息报中如果生于的数据不足128字节，不足的部分将以0x1A填充。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">int32_t xmodem_download(uint32_t start_addr, uint32_t max_size, int *err)</span><br><span class="line">&#123;</span><br><span class="line">   xmodem_init();</span><br><span class="line">   xmodem_start();</span><br><span class="line"></span><br><span class="line">   while (1)</span><br><span class="line">   &#123;</span><br><span class="line">      int ret &#x3D; xmodem_getPacket();&#x2F;&#x2F;从串口得到数据，并校验</span><br><span class="line"></span><br><span class="line">      switch (ret)</span><br><span class="line">      &#123;</span><br><span class="line">         case XMODEM_DATA_OK:</span><br><span class="line">           sflash_write_data(start_addr, xbuf + 3, xmodem.packet_size);</span><br><span class="line">           start_addr +&#x3D; xmodem.packet_size;</span><br><span class="line">           xmodem.rcv_size +&#x3D; xmodem.packet_size;</span><br><span class="line">           xmodem.rcv_packet++;</span><br><span class="line">           if (xmodem.rcv_size &gt; max_size)</span><br><span class="line">           &#123;</span><br><span class="line">              xmodem_stop();</span><br><span class="line">              *err &#x3D; -2;</span><br><span class="line">              goto exit;</span><br><span class="line">           &#125;</span><br><span class="line">           xmodem_ack();</span><br><span class="line">         break;</span><br><span class="line"></span><br><span class="line">         case XMODEM_PKT_NUM_ERR:</span><br><span class="line">           xmodem_stop();</span><br><span class="line">           *err &#x3D; -3;</span><br><span class="line">           goto exit;</span><br><span class="line"></span><br><span class="line">         case XMODEM_CHECK_ERR:</span><br><span class="line">           xmodem_nack();</span><br><span class="line">         break;</span><br><span class="line"></span><br><span class="line">     case XMODEM_DATA_REPEAT:</span><br><span class="line">       xmodem_ack();</span><br><span class="line">     break;</span><br><span class="line"></span><br><span class="line">         case XMODEM_EOT:</span><br><span class="line">           xmodem_ack();</span><br><span class="line">           PRINTF((&quot;\nXMODEM info  pkt: %d, size: %ld, chk: %s\n&quot;,</span><br><span class="line">                   xmodem.packet_size,</span><br><span class="line">                   xmodem.rcv_size,</span><br><span class="line">                   xmodem.chk_type &#x3D;&#x3D; XMODEM_CHECKSUM ? &quot;CHECKSUM&quot; : &quot;CRC16&quot;));</span><br><span class="line">           *err &#x3D; 0;</span><br><span class="line">       goto exit;</span><br><span class="line"></span><br><span class="line">     case XMODEM_CAN:</span><br><span class="line">       xmodem_ack();</span><br><span class="line">       *err &#x3D; -4;</span><br><span class="line">           goto exit;</span><br><span class="line"></span><br><span class="line">     case XMODEM_SOH_ERR:</span><br><span class="line">       xmodem_stop();</span><br><span class="line">       *err &#x3D; -5;</span><br><span class="line">           goto exit;</span><br><span class="line"></span><br><span class="line">     default: break;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">exit:</span><br><span class="line">   return xmodem.rcv_size;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">串行通信的文件传输协议主要有：Xmodem、Ymodem、Zmodem和KERMIT等。</summary>
    
    
    
    <category term="驱动" scheme="http://xianke5200.github.io/categories/%E9%A9%B1%E5%8A%A8/"/>
    
    
  </entry>
  
</feed>
